{"version":3,"sources":["Images/Trackit_logo.png","context/UserContext.js","Chart/Donut.js","Dashboard/ComplexGrid.js","Chart/BarChart.js","Input/GeneralButton.js","Pages/Home.js","Chart/LineChart.js","Input/CategoryOptions.js","Input/ChartToggle.js","Loaders/Loading.js","Pages/Profile.js","Input/Slider.js","Input/GeneralTextField.js","auth/EditUser.js","Pages/Settings.js","Loaders/Loading2.js","Input/Form.js","Input/AddNewCategory.js","Pages/AddNew.js","Table/NewMaterialTable.js","Pages/ProductPage.js","Pages/CategoryPage.js","Pages/UpdateProduct.js","auth/Register.js","auth/AuthOptions.js","auth/Login.js","auth/ForgotPassword.js","auth/ResetPassword.js","Sidebar/Drawer.js","App.js","index.js"],"names":["module","exports","createContext","Donut","useState","chartData","setChartData","useEffect","labels","datasets","label","backgroundColor","data","align","class","options","title","text","display","makeStyles","theme","root","flexGrow","paper","padding","spacing","margin","maxWidth","background","image","width","height","img","maxHeight","BarChart","borderColor","responsive","scales","yAxes","ticks","beginAtZero","gridLines","xAxes","GeneralButton","props","classes","button","marginLeft","marginRight","marginBottom","color","useStyles","Button","variant","onClick","handleSubmit","fullWidth","className","textAlign","fontSize","fontWeight","subtitle","Home","userData","useContext","UserContext","user","Paper","style","Grid","container","item","xs","displayName","border","LineChart","catValue","fontColor","legend","position","Axes","CATEGORIES_QUERY","gql","textField","CategoryOptions","categoryOptions","categoryValue","setCategoryValue","useQuery","loading","error","inputCategoryValue","setInputCategoryValue","categories","filter","category","userID","id","map","push","name","Autocomplete","onChange","event","newValue","callBackFromParent","onInputChange","newInputValue","renderInput","params","TextField","to","ChartToggle","period","setPeriod","ToggleButtonGroup","value","exclusive","size","justifyContent","paddingTop","paddingBottom","newPeriod","aria-label","ToggleButton","backdrop","zIndex","drawer","Loading","Backdrop","open","CircularProgress","PRODUCTS_QUERY","Profile","resetDate","dateInMs","date","Date","parseInt","getFullYear","getMonth","getDate","getTime","dateToMS","dateArray","tempDateArray","i","length","MStoDate","periodModifier","array","splice","singleDayProccessor","priceArray","newDateArray","newPriceArray","extendDateArray","completeDateArray","start","end","console","log","consecutiveDateArray","addTheNull","j","undefined","product","dataset","finalPriceArrays","val","filteredProducts","n","pair","k","m","fill","newCompleteDateArray","d","handleClick","products","createMuiTheme","palette","type","marginTop","ThemeProvider","marks","valuetext","DiscreteSlider","Typography","gutterBottom","Slider","defaultValue","getAriaValueText","aria-labelledby","step","min","max","editSliderValue","valueLabelDisplay","GeneralTextField","placeholder","InputLabelProps","shrink","EditUser","newEmail","setNewEmail","currPassword","setCurrPassword","newPassword","setNewPassword","newDisplayName","setNewDisplayName","notiSettings","setNotiSettings","e","a","preventDefault","Axios","post","loginRes","localStorage","setItem","token","store","addNotification","message","insert","animationIn","animationOut","dismiss","duration","onScreen","response","msg","target","Settings","alignItems","wrapper","buttonSuccess","green","fabProgress","top","left","buttonProgress","CREATE_MUTATION","brandOptions","Form","useMutation","createProduct","brandValue","setBrandValue","inputBrandValue","setInputBrandValue","setName","setPrice","minPrice","setMinPrice","url","setUrl","today","setToday","interval","setInterval","clearInterval","getHours","getMinutes","newUrl","newName","newMinPrice","parseFloat","currDate","toString","variables","brand","price","refetchQueries","query","CREATE_CATEGORY_MUTATION","AddNewCategory","createCategory","AddNew","tableIcons","Add","forwardRef","ref","Check","Clear","Delete","DetailPanel","Edit","Export","Filter","FirstPage","LastPage","NextPage","PreviousPage","ResetSearch","Search","SortArrow","ThirdStateCheck","ViewColumn","REMOVE_MUTATION","UPDATE_PRODUCT_MUTATION","ADD_PRICE_AND_DATE_MUTATION","inline","toolbar","caption","selectIcon","select","actions","NewMaterialTable","removeProduct","updateProduct","groupingBoolean","setGroupingBoolean","urlBoolean","setUrlBoolean","addPriceAndDate","icons","columns","field","editable","hidden","onRowUpdate","newData","oldData","Promise","resolve","reject","setTimeout","productID","icon","UpdateIcon","tooltip","rowData","productUrl","productDateArray","productPriceArray","DeleteIcon","components","Toolbar","colour","actionsColumnIndex","grouping","headerStyle","USER_PRODUCTS_QUERY","ProductPage","useLazyQuery","pollInterval","REMOVE_CATEGORIES_MUTATION","CategoryPage","currUserID","productLoading","productError","productData","removeCategory","String","List","numOf","ListItem","ListItemText","primary","secondary","ListItemSecondaryAction","IconButton","cat","UpdateProduct","currCat","setCat","displayedPdts","setDisplayedPdts","labelId","Fragment","component","handleUpdate","Register","email","setEmail","password","setPassword","passwordCheck","setPasswordCheck","setDisplayName","setUserData","history","useHistory","submit","newUser","AuthOptions","closeDrawer","Login","loginUser","flexDirection","ForgotPassword","ResetPassword","newPass","confirmNewPass","resetLink","match","alert","appBar","transition","transitions","create","easing","sharp","leavingScreen","appBarShift","easeOut","enteringScreen","menuButton","hide","flexShrink","drawerPaper","boxShadow","drawerHeader","mixins","content","contentShift","PersistentDrawerLeft","useTheme","React","setOpen","showIconButton","setShowIconButton","handleDrawerClose","CssBaseline","AppBar","clsx","edge","src","Trackit_logo","alt","Drawer","anchor","direction","Divider","MenuList","MenuItem","Link","ListItemIcon","exact","path","light","main","dark","default","App","getItem","headers","get","userRes","checkLoggedIn","Provider","httpLink","createHttpLink","uri","client","ApolloClient","link","cache","InMemoryCache","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.d54af484.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/Trackit_logo.c21465db.png\";","import { createContext } from \"react\";\n\nexport default createContext(null);","import React, {useState, useEffect} from 'react';\nimport {Doughnut} from 'react-chartjs-2'; //there is also pie and bar\n\nexport default function Donut() {\n    const [chartData, setChartData] = useState({})\n    \n\n    const chart = () => {\n        setChartData({\n            labels: ['Electronics', 'Food', 'Chairs', 'Clothing'\n            , 'Lifestyle', 'Cars', 'Houses', 'Watches', 'Tables', 'Gaming'],\n            datasets: [\n                {\n                    label: 'Amazon',\n                    backgroundColor: ['#159dfb', '#c83955', '#FFD166', '#17d993', '#9CFFFA', '#2BD9FE', '#623CEA', '#DFB2F4', '#D36135', '#EF476F '],\n                    // hoverBackgroundColor: [\n                    //     '#FF6384',\n                    //     '#36A2EB',\n                    //     '#FFCE56'\n                    // ],\n                    // borderColor: 'rgb(255, 99, 132)',\n                    data: [3,2,2,3,5,7,3,4,2,5]\n                }\n            ],\n        })\n    }\n    useEffect(() => {\n        chart()\n    }, [])\n\n    return (\n        <div>\n            <h1 align='center'>Categories</h1>\n            {/* //options */}\n            <div class=\"canvas-container\">\n                <Doughnut data={chartData} options={{\n                    // responsive: true,\n                    // maintainAspectRatio: true,\n                    title: {text:'Product categories', display: false}\n                }}/>\n            </div>\n        </div>\n    )\n}\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper';\nimport Typography from '@material-ui/core/Typography';\nimport ButtonBase from '@material-ui/core/ButtonBase';\nimport Donut from '../Chart/Donut';\nimport Button from '@material-ui/core/Button';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n  },\n  paper: {\n    padding: theme.spacing(2),\n    margin: 'auto',\n    maxWidth: 500,\n    background: \"#27293d\"\n  },\n  image: {\n    width: 128,\n    height: 128,\n  },\n  img: {\n    margin: 'auto',\n    display: 'block',\n    maxWidth: '100%',\n    maxHeight: '100%',\n  },\n}));\n\nexport default function ComplexGrid() {\n  const classes = useStyles();\n\n  return (\n    <div className={classes.root}>\n      <Paper className={classes.paper}>\n        <Grid container spacing={2}>\n          <Grid item>\n            <ButtonBase className={classes.image}>\n              {/* <img className={classes.img} alt=\"complex\" src=\"/static/images/grid/complex.jpg\" /> */}\n              {/* <Donut /> */}\n            </ButtonBase>\n          </Grid>\n          <Grid item xs={4} sm container>\n            <Grid item xs container direction=\"column\" spacing={2}>\n              <Grid item xs>\n                <Typography gutterBottom variant=\"subtitle1\">\n                  Biggest price drop\n                </Typography>\n                <Typography variant=\"body2\" gutterBottom>\n                  Monitor 1\n                </Typography>\n                <Typography variant=\"body2\" color=\"textSecondary\">\n                    49% drop\n                </Typography>\n              </Grid>\n              <Grid item>\n                <Typography variant=\"body2\" style={{ cursor: 'pointer' }}>\n                <Button variant=\"contained\" color=\"#2e84f8\" margin =\"big\" \n                // onClick={}\n                    fullWidth={false} className={classes.textField}>\n                    Visit site\n                </Button>\n                </Typography>\n              </Grid>\n            </Grid>\n            <Grid item>\n              <Typography variant=\"subtitle1\">$49.00</Typography>\n            </Grid>\n          </Grid>\n        </Grid>\n      </Paper>\n    </div>\n  );\n}\n","import React, {useState, useEffect} from 'react';\nimport {Bar} from 'react-chartjs-2'; //there is also pie and bar\n\nexport default function BarChart() {\n    const [chartData, setChartData] = useState({})\n\n    const chart = () => {\n        setChartData({\n            labels: ['Electronics', 'Food', 'Furniture', 'Clothing'\n            , 'Lifestyle', 'Cars'],\n            datasets: [\n                {\n                    label: 'Amazon',\n                    backgroundColor: 'rgb(255, 99, 132)',\n                    borderColor: 'rgb(255, 99, 132)',\n                    data: [10, 20, 30, 40, 50, 60, 70, 80, 90, 100]\n                }, \n                // {\n                //     label: 'Shopee',\n                //     backgroundColor: 'rgb(255, 165, 0)',\n                //     borderColor: 'rgb(255, 165, 0)',\n                //     data: [10, 20, 30, 40, 50, 60, 70, 80, 90, 100]\n                // }\n            ]\n        })\n    }\n    useEffect(() => {\n        chart()\n    }, [])\n\n    return (\n        <div>\n            <h1 align='center'>Price drops this week</h1>\n            {/* //options */}\n            <div class=\"canvas-container\">\n                <Bar data={chartData} options={{\n                    responsive: true,\n                    title: {text:'Sony Wireless Headphones', display: false},\n                    scales: {\n                        yAxes: [\n                            {\n                                ticks: {\n                                    // autoskip: true,\n                                    // maxTicksLimit: 10,\n                                    beginAtZero: true\n                                },\n                                gridLines: {\n                                    display: false\n                                }\n                            }\n                        ],\n                        xAxes: [\n                            {\n                                gridLines : {\n                                    display: false\n                                }\n                            }\n                        ]\n                    }\n                }}/>\n            </div>\n        </div>\n    )\n}\n\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\n\nexport default function GeneralButton(props) {\n    const useStyles = makeStyles((theme) => ({\n        button: {\n            marginLeft: theme.spacing(1),\n            marginRight: theme.spacing(1),\n            marginBottom: theme.spacing(1),\n            backgroundColor: \"#3f51b5\",\n            // backgroundColor: \"#3f51b5\",\n            color: \"white\",\n            '&:hover': {\n                backgroundColor: '#32408f',\n                color: '#FFF'\n            }\n        },\n    }));\n    const classes = useStyles();\n\n    return (\n        <Button variant=\"contained\" \n                margin =\"big\" \n                onClick= {props.handleSubmit}\n                fullWidth={props.fullWidth} \n                className={classes.button}>\n            {props.text}\n        </Button>\n    );\n}","import React, {useState, useEffect, useContext} from 'react';\n// import Poster2 from \"../Images/Poster2.jpg\";\nimport { Link } from \"react-router-dom\";\nimport UserContext from '../context/UserContext';\nimport Paper from '@material-ui/core/Paper';\nimport ComplexGrid from '../Dashboard/ComplexGrid';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport Cards from '../Dashboard/Cards';\nimport Donut from '../Chart/Donut';\nimport Chart from '../Chart/Chart';\nimport BarChart from '../Chart/BarChart';\nimport * as styles from '../style.css'\nimport GeneralButton from '../Input/GeneralButton';\n\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n      flexGrow: 1,\n    },\n    paper: {\n      padding: theme.spacing(1),\n      textAlign: 'center',\n      // color: theme.palette.text.secondary,\n      backgroundColor: \"#212029\",\n      // opacity: 0.95,\n    },\n    title: {\n      fontSize:60,\n      color: \"white\",\n      fontWeight:700,\n    },\n    subtitle: {\n      fontSize:28,\n      color: \"white\",\n      fontWeight:500,\n    }\n  }));\n\nfunction Home() {\n    // const [today, setToday] = useState(new Date());\n    const { userData } = useContext(UserContext);\n    const classes = useStyles();\n    \n    // useEffect(() => {\n    //     const interval = setInterval(() => {\n    //         setToday(new Date());\n    //     }, 1000);\n    //     return () => clearInterval(interval);\n    //   }, []);\n      \n    // const date = today.getFullYear() + '-' + (today.getMonth()+1) + '-' + today.getDate();\n    // const time = today.getHours() + \":\" + today.getMinutes() + \":\" + today.getSeconds();\n    \n    return (\n        <>\n        {userData.user ? (\n        <Paper className={classes.paper} style={{ margin: 30 , padding: 30 }}>   \n        {/* <div className={classes.root}> */}\n        <div className=\"background-darkblue\">\n    \n        <Grid container spacing={3}>\n          <Grid item xs={12}>\n            <div>\n              {/* <h2>{date} {time}</h2> */}\n              <div className=\"page\">\n                  {userData.user ? (\n                      <div className={classes.title}>Welcome {userData.user.displayName}</div>\n                  ) : null }\n              </div>\n              <div className={classes.subtitle}>This week's summary</div>\n              {/* <img src={Poster2} alt=\"Poster2\" /> */}\n              </div>\n            \n          </Grid>\n          <Grid item xs={6} style={{border: \"1px solid gray\"}}>\n            <Paper className={classes.paper}>\n                <Donut/>\n            </Paper>\n          </Grid>\n          <Grid item xs={6} style={{border: \"1px solid gray\"}}>\n            <Paper className={classes.paper}>\n              <BarChart />\n            </Paper>\n          </Grid>\n          {/* <Grid item xs={12}>\n            <Paper className={classes.paper}>Test</Paper>\n          </Grid> */}\n          {/* <ComplexGrid/>\n          <ComplexGrid/>\n          <ComplexGrid/> */}\n        </Grid>\n      </div>\n          </Paper>\n        \n                    \n        ) : (\n            <>\n            <h2 style={{textAlign:\"center\"}}>You are not logged in</h2>\n            \n            {/* <div style={{marginTop: 15}}>\n              <GeneralButton \n                  handleSubmit={login}\n                  fullWidth={true}\n                  text=\"Log in\"\n              />\n            </div> */}\n            </>\n        )}\n        </>\n    )\n}\n\nexport default Home;","import React from 'react';\nimport {Line} from 'react-chartjs-2';\n//test\nfunction LineChart(props) {\n            \n    return (\n        <div className='chart'>\n            <Line \n                data={props.chartData}\n                options={{\n                    title: {\n                        // display: this.props.displayTitle,\n                        display: true,\n                        text: props.catValue,\n                        responsive: true,\n                        fontColor: \"#fff\"\n                    },\n                    // responsive: true,\n                    // maintainAspectRatio: true,\n                    legend: {\n                        // display: this.props.displayLegend,\n                        // position: this.props.legendPosition\n                        display: true,\n                        position: 'bottom'\n                    },\n                    Axes: {\n                        color:  '#000'\n                    }\n\n                }}\n\n            />\n        </div>\n    )\n    \n}\nexport default LineChart;","import React, {useState, useContext} from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport TextField from '@material-ui/core/TextField';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport { gql } from 'apollo-boost';\nimport { useQuery, } from '@apollo/react-hooks';\nimport { Link } from \"react-router-dom\";\nimport UserContext from '../context/UserContext';\n\nconst CATEGORIES_QUERY = gql `\n{\n    categories {\n        id\n        name\n        userID\n    }\n}`;\n\nconst useStyles = makeStyles((theme) => ({\n    textField: {\n      marginLeft: theme.spacing(1),\n      marginRight: theme.spacing(1),\n    },\n\n  }));\n\nexport default function CategoryOptions(props) {\n  const categoryOptions = [];\n  const [categoryValue, setCategoryValue] = useState(categoryOptions[0]);\n  const classes = useStyles();\n  const { loading, error, data } = useQuery(CATEGORIES_QUERY);\n  const [inputCategoryValue, setInputCategoryValue] = useState('');\n  const { userData } = useContext(UserContext);\n  \n  if (loading) return <p>Loading...</p>;\n  if (error) return <p>Error! :(</p>;\n  \n    data.categories.filter((category) => \n    category.userID === userData.user.id)\n  .map((category) => categoryOptions.push(category.name));\n\n  return (\n    <>\n      {userData.user ? (\n        <div>\n            <Autocomplete\n                categoryValue = {categoryValue}\n                onChange = {(event, newValue) => {\n                    setCategoryValue(newValue);\n                    //for filtering purposes\n                    if(props.callBackFromParent) {\n                      props.callBackFromParent(newValue); \n                    }\n                  }\n                }\n                inputCategoryValue = {inputCategoryValue}\n                onInputChange = {(event, newInputValue) => {\n                  setInputCategoryValue(newInputValue);\n                }}\n                // id = \"controllable-states-demo\"\n                options = {categoryOptions}\n                // style = {{ color: \"#212029\" }}\n                renderInput = {(params) => <TextField {...params} label=\"Category\" variant=\"outlined\" />}\n            />\n        </div>\n      ) : (\n            <>\n              <h2>You are not logged in</h2>\n              <Link to=\"/login\">Log in</Link>\n            </>\n          )}\n    </>\n  );\n} \n","import React, {useState} from 'react';\nimport FormatAlignLeftIcon from '@material-ui/icons/FormatAlignLeft';\nimport FormatAlignCenterIcon from '@material-ui/icons/FormatAlignCenter';\nimport FormatAlignRightIcon from '@material-ui/icons/FormatAlignRight';\nimport FormatAlignJustifyIcon from '@material-ui/icons/FormatAlignJustify';\nimport ToggleButton from '@material-ui/lab/ToggleButton';\nimport ToggleButtonGroup from '@material-ui/lab/ToggleButtonGroup';\n\nexport default function ChartToggle(props) {\n  const [period, setPeriod] = useState('all');\n\n  const handlePeriodChange = (event, newPeriod) => {\n\tif(newPeriod !== null) {\n\t\tsetPeriod(newPeriod);\n\t\tif(props.callBackFromParent) {\n\t\t\tprops.callBackFromParent(newPeriod); \n\t\t}\n\t}\n  };\n\n  return (\n    <ToggleButtonGroup\n      value={period}\n      exclusive\n\t  size=\"medium\"\n\t  style ={{position:\"relative\", display: 'flex', justifyContent: 'center', paddingTop: 30, paddingBottom: 15}}\n\t//   orientation = \"vertical\"\n      onChange={handlePeriodChange}\n      aria-label=\"period options\"\n    >\n      <ToggleButton value=\"week\" aria-label=\"week period\">\n        Week\n      </ToggleButton>\n      <ToggleButton value=\"month\" aria-label=\"month period\">\n        Month\n      </ToggleButton>\n      <ToggleButton value=\"all\" aria-label=\"all period\">\n        All\n      </ToggleButton>\n    </ToggleButtonGroup>\n  );\n}","import React, {useState} from 'react';\nimport Backdrop from '@material-ui/core/Backdrop';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport Button from '@material-ui/core/Button';\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles((theme) => ({\n  backdrop: {\n    zIndex: theme.zIndex.drawer + 1,\n    color: '#fff',\n  },\n}));\n\nexport default function Loading(props) {\n  const classes = useStyles();\n  // const [open, setOpen] = useState(true);\n  // const handleClose = () => {\n  //   setOpen(false);\n  // };\n  // const handleToggle = () => {\n  //   setOpen(!open);\n  // };\n\n  return (\n    <div>\n      <Backdrop className={classes.backdrop} open={props.open}>\n        <CircularProgress color=\"inherit\" />\n      </Backdrop>\n    </div>\n  );\n}\n","// import React, {Component} from 'react';\nimport React, {useState, useContext, useEffect} from 'react';\n//updated import\nimport LineChart from '../Chart/LineChart';\n// import BrandOptions from '../Input/BrandOptions';\nimport CategoryOptions from '../Input/CategoryOptions';\n//graphql stuff\nimport { gql } from 'apollo-boost';\nimport { useQuery, useMutation } from '@apollo/react-hooks';\nimport UserContext from '../context/UserContext';\nimport { Link } from \"react-router-dom\";\nimport Paper from '@material-ui/core/Paper';\nimport ChartToggle from '../Input/ChartToggle.js';\nimport { makeStyles, ThemeProvider, createMuiTheme } from '@material-ui/core/styles';\nimport Loading from '../Loaders/Loading';\n\n\n\n\nconst PRODUCTS_QUERY = gql `\n{\n    products {\n        id\n        name\n        price\n        category\n        userID\n        priceArray\n        dateArray\n    }\n}`;\n\n\n\nfunction Profile() {\n\n    const [categoryValue, setCategoryValue] = useState();\n\n    const { loading, error, data } = useQuery(PRODUCTS_QUERY);\n\n    const { userData } = useContext(UserContext);\n    \n    const [chartData, setChartData] = useState({});\n\n    const [period, setPeriod] = useState('all');\n\n    const useStyles = makeStyles((theme) => ({\n        root: {\n          flexGrow: 1,\n        },\n        paper: {\n          padding: theme.spacing(1),\n          textAlign: 'center',\n          // color: theme.palette.text.secondary,\n          background: \"#212029\",\n        },\n      }));\n\n      const classes = useStyles();\n    \n    function resetDate(dateInMs) {\n        var date = new Date(parseInt(dateInMs));\n        var newDate = new Date(date.getFullYear(), date.getMonth(), date.getDate());\n        return newDate.getTime();\n    }\n\n    function dateToMS(dateArray) {\n        var tempDateArray =[];\n        for (var i = 0; i < dateArray.length; i++) {\n            tempDateArray.push(dateArray[i].getTime());\n        }\n        return tempDateArray;\n    }\n\n    function MStoDate(dateArray) {\n        var tempDateArray = [];\n        for (var i = 0; i < dateArray.length; i++) {\n            tempDateArray.push(new Date(parseInt(dateArray[i])));\n        }\n        return tempDateArray;\n    }\n\n    //modify array according to period selected\n    function periodModifier(period, array) {\n        if(period === 'week' && array.length > 7) {\n            return array.splice(-7);\n        } else if(period === 'month' && array.length > 31) {\n            return array.splice(-31);\n        } else {\n            return array;\n        }\n    }\n    \n    //takes in dateArray and priceArray\n    //returns 2 arrays in a pair.\n    //if there are 2 or more prices on the same day, it will keep the lower entry and remove the others\n    function singleDayProccessor(dateArray, priceArray){\n        const newDateArray = [];\n        const newPriceArray = [];\n        const tempDateArray = MStoDate(dateArray);\n        // dateArray.map(ms => new Date(parseInt(ms)));\n        \n\n        if(tempDateArray.length === 1) {\n            newPriceArray.push(priceArray[0]);\n            newDateArray.push(tempDateArray[0])\n        } else {\n            for(var i = 0; i < tempDateArray.length; i++) {\n\n                //if got two prices recorded for the same day\n                if(i !== tempDateArray.length - 1 &&\n                    tempDateArray[i].getDate() === tempDateArray[i+1].getDate() &&\n                    tempDateArray[i].getMonth() === tempDateArray[i+1].getMonth() &&\n                    tempDateArray[i].getFullYear() === tempDateArray[i+1].getFullYear()) {\n\n                    //if the price for the current entry is lower\n                    if(priceArray[i] < priceArray[i + 1]) {\n                        newPriceArray.push(priceArray[i]);\n                        newDateArray.push(tempDateArray[i])\n                        i++;\n                    // if the price for the next entry is lower, record that one\n                    } else {\n                        newDateArray.push(tempDateArray[i + 1])\n                        newPriceArray.push(priceArray[i + 1]);\n                        i++;\n                    }\n\n\n                // if no two prices on the same day, just record the entry    \n                } else {\n                    newPriceArray.push(priceArray[i]);\n                    newDateArray.push(tempDateArray[i])\n                }\n            }\n        }\n\n        // newDateArray.map(date => date.getTime().toString())\n        \n        return [dateToMS(newDateArray), newPriceArray];\n    }\n\n    //create array for dates from start date to end date\n    function consecutiveDateArray(start, end){\n\n        var dateArray =[resetDate(start)];\n        end = resetDate(end);\n        while(dateArray[dateArray.length - 1] < parseInt(end)) {\n            dateArray.push(parseInt(dateArray[dateArray.length - 1]) + 86400000)\n        }\n        return dateArray;\n    }\n\n    //extends completeDateArray\n    function extendDateArray(dateArray, completeDateArray) {\n        var start;\n        var end;\n        if(completeDateArray.length === 0 && dateArray.length === 0) {\n\n            return [];\n        } else if (dateArray.length === 0) {\n\n            return completeDateArray;\n        }else if(completeDateArray.length === 0) {\n\n            start = dateArray[0];\n            end = dateArray[dateArray.length - 1];\n        } else {\n            console.log(\"bump4\");\n            console.log(dateArray)\n            console.log(\"firstdate \" + parseInt(dateArray[0]));\n            console.log(\"lastdate \" + parseInt(dateArray[dateArray.length - 1]));\n            console.log(completeDateArray);\n            console.log(\"complete first date \" + parseInt(completeDateArray[0]));\n            console.log(\"complete last date \" + parseInt(completeDateArray[completeDateArray.length - 1]));\n\n            if(parseInt(dateArray[0]) <= parseInt(completeDateArray[0])) {\n                start = dateArray[0];\n            } else {\n                start = completeDateArray[0];\n            }\n\n            if(parseInt(dateArray[dateArray.length - 1]) <= parseInt(completeDateArray[completeDateArray.length - 1])) {\n                end = completeDateArray[completeDateArray.length - 1];\n                \n            } else {\n                end = dateArray[dateArray.length - 1];\n            }\n            console.log(\"start \" + start);\n            console.log(\"end\" + end);\n        }\n        return consecutiveDateArray(start, end);\n    }\n\n    //fill in the gaps with null\n    function addTheNull(priceArray, dateArray, completeDateArray) {\n        var newPriceArray = [];\n        var j = 0;\n        dateArray = MStoDate(dateArray);\n        completeDateArray = MStoDate(completeDateArray);\n        for(var i = 0; i < completeDateArray.length; i++) {\n\n            if(j < dateArray.length && \n            dateArray[j].getDate() === completeDateArray[i].getDate() &&\n            dateArray[j].getMonth() === completeDateArray[i].getMonth() &&\n            dateArray[j].getFullYear() === completeDateArray[i].getFullYear()){\n                newPriceArray.push(priceArray[j]);\n                j++;\n            } else {\n                newPriceArray.push(null);\n            }\n        }\n\n        return newPriceArray;\n    }\n\n    const handleClick = (product, user, period) => {\n        console.log(userData.user.id)\n        var dataset = [];\n        var finalPriceArrays = [];\n        const val = ['#F44E3B', '#FE9200', '#FCDC00', '#DBDF00', '#A4DD00', '#68CCCA', '#73D8FF', '#AEA1FF', '#FDA1FF', '#333333', '#808080', '#cccccc', '#D33115', '#E27300', '#FCC400', '#B0BC00', '#68BC00', '#16A5A5', '#009CE0', '#7B64FF', '#FA28FF', '#000000', '#666666', '#B3B3B3', '#9F0500', '#C45100', '#FB9E00', '#808900', '#194D33', '#0C797D', '#0062B1', '#653294', '#AB149E'];\n\n        //filter out products and stores them as objects in a new array\n        var filteredProducts = [];\n        for (var i = 0; i < product.length; i++) {\n            if(product[i].userID === user.id && product[i].category === categoryValue) {\n                filteredProducts.push(product[i]);\n            }\n        }\n\n        //in each loop, extends the date array based on the current date array given\n        var completeDateArray =[];\n        for(var n = 0; n < filteredProducts.length; n++) {\n            const pair = singleDayProccessor(filteredProducts[n].dateArray, filteredProducts[n].priceArray);\n            filteredProducts[n].dateArray = pair[0];\n            filteredProducts[n].priceArray = pair[1];\n\n            completeDateArray = extendDateArray(filteredProducts[n].dateArray, completeDateArray);\n\n        }\n        console.log(\"last date\" + completeDateArray.length);\n\n        //fill the gaps of the price array in accordance to the longer completeDateArray\n        for(var k = 0; k < filteredProducts.length; k++) {\n            finalPriceArrays.push( \n                addTheNull(\n                    filteredProducts[k].priceArray, \n                    filteredProducts[k].dateArray, \n                    completeDateArray\n                )\n            )\n        }\n\n\n        for(var m = 0; m < filteredProducts.length; m++) {\n            dataset.push({\n                    label: filteredProducts[m].name,\n                    data: periodModifier(period, finalPriceArrays[m]),\n                    fill: false,\n                    borderColor: val[m],\n                    backgroundColor: val[m],\n            });\n        }\n\n        var newCompleteDateArray = [];\n        for (var i = 0; i < completeDateArray.length; i++) {\n            const d = new Date(completeDateArray[i]);\n            newCompleteDateArray.push((d.getDate()) + \" \" + (d.getMonth() + 1) + \" \" + d.getFullYear());\n        }\n\n        console.log(period);\n\n        return(setChartData({\n            labels: periodModifier(period, newCompleteDateArray),\n            datasets: dataset\n        }))\n        \n    }\n\n    useEffect(() => {\n        if(userData !== undefined && userData.user !== undefined && data !== undefined) {\n            handleClick(data.products, userData.user, period)\n        }\n    }, [data, userData, categoryValue, period])\n\n    const theme = createMuiTheme({\n        palette: {\n            type: 'dark',\n        },\n    });\n        \n    if (loading) return <Loading open={true}/>;\n    if (error) return <p>Error! :(</p>;\n\n        \n\n    return (\n        <>\n        {userData.user ? (\n            <div className={classes.paper} style={{ margin: 30 , padding: 30}}>\n                <div style={{ marginTop: -30}}> \n                <ThemeProvider theme={theme}>\n                    <h2>My Profile</h2>\n                    <h2>Please choose a category to display</h2>\n                    <CategoryOptions callBackFromParent={setCategoryValue} />\n                    <ChartToggle callBackFromParent={setPeriod}/>\n                    <LineChart chartData={chartData} catValue = {categoryValue}/>\n                    <p>Click on individual products to remove them from view</p>\n                </ThemeProvider>\n                </div>\n            </div>\n        ) : (\n            <>\n            <h2 >You are not logged in</h2>\n            <Link to=\"/login\">Log in</Link>\n            </>\n        )\n        }\n        </>\n    );\n    \n}\n\n\nexport default Profile;","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport Slider from '@material-ui/core/Slider';\nimport { createMuiTheme } from '@material-ui/core/styles';\nimport { ThemeProvider } from '@material-ui/styles';\n\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: 700,\n    margin: theme.spacing(3),\n  },\n  margin: {\n    height: theme.spacing(3),\n  },\n}));\n\n\nconst marks = [\n  {\n    value: 0,\n    label: 'Off',\n  },\n  {\n    value: 4,\n    label: '4 Hours',\n  },\n  {\n    value: 8,\n    label: '8 Hours',\n  },\n  {\n    value: 12,\n    label: '12 Hours',\n  },\n  {\n    value: 16,\n    label: '16 Hours',\n  },\n  {\n    value: 20,\n    label: '20 Hours',\n  },\n  {\n    value: 24,\n    label: '24 Hours',\n  },\n\n];\n\nfunction valuetext(value) {\n  return `${value}`;\n}\n\nexport default function DiscreteSlider(props) {\n  const classes = useStyles();\n\n  return (\n    <div className={classes.root}>\n      <Typography id=\"discrete-slider-custom\" gutterBottom>\n        Choose how often to recieve email notifications if there are price alerts\n      </Typography>\n        <Slider\n          defaultValue={24}\n          getAriaValueText={valuetext}\n          aria-labelledby=\"discrete-slider-custom\"\n          step={4}\n          min={0}\n          max={24}\n          onChange={props.editSliderValue}\n          valueLabelDisplay=\"auto\"\n          marks={marks}\n        />\n    </div>\n  );\n}","import React from 'react';\nimport TextField from '@material-ui/core/TextField';\nimport { makeStyles } from '@material-ui/core/styles';\n\n\nexport default function GeneralTextField(props) {\n    \n    const useStyles = makeStyles((theme) => ({\n        textField: {\n            marginLeft: theme.spacing(1),\n            marginRight: theme.spacing(1),\n            marginBottom: theme.spacing(1),\n            // border: \"1px solid gray\",\n            // backgroundColor: \"#4d6d80\"\n        },\n        // input: {\n        //     \"&::placeholder\": {\n        //       textOverflow: \"ellipsis !important\",\n        //       color: \"white\",\n        //       fontSize: 14\n        //     }\n        // },\n        // root: {\n        // width: '100%',\n        // '& > * + *': {\n        //     marginTop: theme.spacing(2),\n        // },\n        // }\n    }));\n\n    const classes = useStyles();\n\n    return (\n        <TextField\n          placeholder={props.placeholder}\n          fullWidth\n          margin=\"normal\"\n          className={classes.textField}\n          InputLabelProps={{\n            shrink: true,\n          }}\n          // InputProps={{\n          //   classes: {\n          //       input: classes.input\n          //   }\n          //   }}\n          variant=\"outlined\"\n          onChange ={props.onChange}\n          value = {props.value}\n          type={props.type}\n        />\n    )\n\n}","import React, { useState, useContext } from \"react\";\n// import { useHistory } from \"react-router-dom\";\nimport UserContext from \"../context/UserContext\";\nimport Axios from \"axios\";\nimport Slider from '../Input/Slider';\nimport { makeStyles } from '@material-ui/core/styles';\n// import TextField from '@material-ui/core/TextField';\nimport GeneralButton from '../Input/GeneralButton';\nimport GeneralTextField from '../Input/GeneralTextField';\nimport { store } from 'react-notifications-component';\n// import App from '../App';\n\nexport default function EditUser() {\n    const [newEmail, setNewEmail] = useState(null);\n    const [currPassword, setCurrPassword] = useState(null);\n    const [newPassword, setNewPassword] = useState(null);\n    const [newDisplayName, setNewDisplayName] = useState(null);\n    const [notiSettings, setNotiSettings] = useState(null);\n    const useStyles = makeStyles((theme) => ({\n        textField: {\n            marginLeft: theme.spacing(1),\n            marginRight: theme.spacing(1),\n            marginBottom: theme.spacing(1),\n        },\n        root: {\n            width: '100%',\n            '& > * + *': {\n            marginTop: theme.spacing(2),\n            },\n        },\n    }));\n    // const classes = useStyles();\n  \n    const { userData } = useContext(UserContext);\n\n    const id = userData.user.id;\n    const handleSubmit = async (e) => {\n        e.preventDefault();\n        try {\n            const user = {\n                id,\n                newEmail,\n                currPassword,\n                newPassword,\n                newDisplayName,\n                notiSettings,\n            };\n            const loginRes = await Axios.post(\n                \"http://localhost:5000/users/EditUser\",\n                user\n            );\n            localStorage.setItem(\"auth-token\", loginRes.data.token);\n            store.addNotification({\n                title: \"Success:\",\n                message: \"Your details have been updated, please log in again\",\n                type: \"success\",\n                insert: \"top\",\n                container: \"top-right\",\n                animationIn: [\"animated\", \"fadeIn\"],\n                animationOut: [\"animated\", \"fadeOut\"],\n                dismiss: {\n                  duration: 2000,\n                  onScreen: true\n                }\n            });\n            \n        } catch (err) {\n            if(err.response.data.msg) {\n                store.addNotification({\n                    title: \"Error:\",\n                    message: `${err.response.data.msg}`,\n                    type: \"danger\",\n                    insert: \"top\",\n                    container: \"top-right\",\n                    animationIn: [\"animated\", \"fadeIn\"],\n                    animationOut: [\"animated\", \"fadeOut\"],\n                    dismiss: {\n                      duration: 2000,\n                      onScreen: true\n                    }\n                });\n            } \n        }\n    };\n\n\n    return (\n        <div className=\"page\">\n        <h2>Edit account information</h2>\n        {/* {error && (\n            <ErrorNotice message={error} clearError={() => setError(undefined)} />\n        )} */}\n\n        <Slider editSliderValue={(value) => setNotiSettings(value)}/>\n        \n        <GeneralTextField\n          placeholder=\"New email\"\n          onChange ={(e) => setNewEmail(e.target.value)}\n          type=\"email\"\n        //   value = \"new email\"\n        />\n\n        <GeneralTextField\n          placeholder=\"New password\"\n          onChange ={(e) => setNewPassword(e.target.value)}\n        //   value = \"new email\"\n        />\n        \n        <GeneralTextField\n          placeholder={userData.user.displayName}\n          onChange ={(e) => setNewDisplayName(e.target.value)}\n          type=\"email\"\n        //   value = \"new email\"\n        />\n\n        <GeneralTextField\n          placeholder=\"Current password\"\n          variant=\"outlined\"\n          onChange ={(e) => setCurrPassword(e.target.value)}\n          type=\"password\"\n        //   value = \"new email\"\n        />\n            <div style={{paddingTop: 10}}>\n            <GeneralButton onClick={handleSubmit}\n                fullWidth={true} text=\"Submit\" />\n            </div>\n        </div>\n    );\n}","import React, { useState, useContext } from 'react';\n// import DiscreteSlider from '../Input/Slider';\n// import ChangeAccountDetails from '../Input/ChangeAccountDetails'\nimport Paper from '@material-ui/core/Paper';\nimport UserContext from '../context/UserContext';\nimport { Link } from \"react-router-dom\";\n// import { useHistory } from \"react-router-dom\";\nimport EditUser from '../auth/EditUser'\n\nfunction Settings(props) {\n    // const history = useHistory();\n    const { userData } = useContext(UserContext);\n    // const Forgot = () => history.push(\"/ForgotPassword\");\n    \n    return (\n        <>\n        {userData.user ? (\n            \n        <Paper style={{ backgroundColor: '#212029', margin: 15 , padding: 30}}>   \n        <div>\n            <h1>User settings</h1>\n\n            <EditUser />\n        </div>\n        </Paper >\n        ) : (\n            <>\n            <h2>You are not logged in</h2>\n            <Link to=\"/login\">Log in</Link>\n            </>\n        )}\n        </>\n    )\n}\n\nexport default Settings;","import React from 'react';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/core/styles';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport { green } from '@material-ui/core/colors';\nimport Button from '@material-ui/core/Button';\nimport Fab from '@material-ui/core/Fab';\nimport CheckIcon from '@material-ui/icons/Check';\nimport SaveIcon from '@material-ui/icons/Save';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: 'flex',\n    alignItems: 'center',\n  },\n  wrapper: {\n    margin: theme.spacing(1),\n    position: 'relative',\n  },\n  buttonSuccess: {\n    backgroundColor: green[500],\n    '&:hover': {\n      backgroundColor: green[700],\n    },\n  },\n  fabProgress: {\n    color: green[500],\n    position: 'absolute',\n    top: -6,\n    left: -6,\n    zIndex: 1,\n  },\n  buttonProgress: {\n    color: green[500],\n    position: 'absolute',\n    top: '50%',\n    left: '50%',\n    marginTop: -12,\n    marginLeft: -12,\n  },\n}));\n\nexport default function Loading2() {\n  const classes = useStyles();\n  const [loading, setLoading] = React.useState(false);\n  const [success, setSuccess] = React.useState(false);\n  const timer = React.useRef();\n\n  const buttonClassname = clsx({\n    [classes.buttonSuccess]: success,\n  });\n\n  React.useEffect(() => {\n    return () => {\n      clearTimeout(timer.current);\n    };\n  }, []);\n\n  const handleButtonClick = () => {\n    if (!loading) {\n      setSuccess(false);\n      setLoading(true);\n      timer.current = setTimeout(() => {\n        setSuccess(true);\n        setLoading(false);\n      }, 2000);\n    }\n  };\n\n  return (\n    <div className={classes.root}>\n      <div className={classes.wrapper}>\n        <Fab\n          aria-label=\"save\"\n          color=\"primary\"\n          className={buttonClassname}\n          onClick={handleButtonClick}\n        >\n          {success ? <CheckIcon /> : <SaveIcon />}\n        </Fab>\n        {loading && <CircularProgress size={68} className={classes.fabProgress} />}\n      </div>\n      <div className={classes.wrapper}>\n        <Button\n          variant=\"contained\"\n          color=\"primary\"\n          className={buttonClassname}\n          disabled={loading}\n          onClick={handleButtonClick}\n        >\n          Accept terms\n        </Button>\n        {loading && <CircularProgress size={24} className={classes.buttonProgress} />}\n      </div>\n    </div>\n  );\n}\n","/* eslint-disable no-unused-vars */\nimport React, {useState, useEffect, useContext} from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport GeneralTextField from '../Input/GeneralTextField';\nimport TextField from '@material-ui/core/TextField';\nimport { gql } from 'apollo-boost';\nimport { useQuery, useMutation } from '@apollo/react-hooks';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport GeneralButton from \"../Input/GeneralButton\";\nimport CategoryOptions from '../Input/CategoryOptions'\nimport UserContext from '../context/UserContext';\nimport { store } from 'react-notifications-component';\nimport Loading2 from '../Loaders/Loading2';\n// import checkPrice from '../Parser/checkPrice';\n\n\nconst PRODUCTS_QUERY = gql`\n{\n    products {\n        id\n        name\n        price\n        dateArray\n    }\n}`;\n\nconst CREATE_MUTATION = gql`\n  mutation CreateProduct($name: String!, $category: String!, $brand: String!, $price: Float!, $url: String!, $minPrice: Float!, $priceArray: [Float]!, $dateArray: [String!]!, $userID: String!){\n  createProduct(name: $name, category: $category, brand: $brand, price: $price, url: $url, minPrice: $minPrice, priceArray: $priceArray, dateArray: $dateArray, userID: $userID) {\n    id\n    name\n    dateArray\n  }\n}\n`;\n\nconst CATEGORIES_QUERY = gql `\n{\n    categories {\n        id\n        name  \n    }\n}`;\n\nconst useStyles = makeStyles((theme) => ({\n  textField: {\n    marginLeft: theme.spacing(1),\n    marginRight: theme.spacing(1),\n    marginBottom: theme.spacing(1),\n  },\n  root: {\n    width: '100%',\n    '& > * + *': {\n      marginTop: theme.spacing(2),\n    },\n  },\n\n}));\n\n\nconst brandOptions = ['Amazon', 'Lazada', 'Qoo10'];\n\nexport default function Form() {\n\n  const { loading, error, data } = useQuery(CATEGORIES_QUERY);    \n  const classes = useStyles();\n  const [createProduct] = useMutation(CREATE_MUTATION);\n  const [brandValue, setBrandValue] = useState(brandOptions[0]);\n  const [inputBrandValue, setInputBrandValue] = useState('');\n  // categoryValue is set to undefined. if user selects and unselects it, it will be set to null. \n  // therefore below categoryValue will check for both undefined and null value\n  const [categoryValue, setCategoryValue] = useState();\n  const [name, setName] = useState('');\n  const [price, setPrice] = useState(0);\n  const [minPrice, setMinPrice] = useState(0)\n  const [url, setUrl] = useState('');\n\n  const { userData } = useContext(UserContext);\n  \n  //For dates\n  const [today, setToday] = useState(new Date());  \n  useEffect(() => {\n      const interval = setInterval(() => {\n          setToday(new Date());\n      }, 1000);\n      return () => clearInterval(interval);\n    }, []);\n\n  const dateAndTime = (today.getFullYear() - 2000)*100000000 + today.getMonth() * 1000000 + today.getDate() * 10000 + today.getHours()*100 + today.getMinutes();\n\n  function handleNameChange(e) {\n    const newName = e.target.value;\n    setName(newName);\n  }\n\n  function handlePriceChange(e) {\n    const newPrice = e.target.value;\n    setPrice(newPrice);\n  }\n\n  function handleUrlChange(e) {\n    const newUrl = e.target.value;\n    setUrl(newUrl);\n  }\n\n  function handleMinPriceChange(e) {\n    const newMinPrice = e.target.value;\n    if(newMinPrice !== null) {\n      setMinPrice(parseFloat(newMinPrice));  \n    }\n    \n  }\n\n  function crawl() {\n    if(url !== '') {\n      console.log(`${url}`)\n      store.addNotification({\n        title: \"Hold on\",\n        message: \"Your product information is being retrieved\",\n        type: \"info\",\n        insert: \"top\",\n        container: \"top-right\",\n        animationIn: [\"animated\", \"fadeIn\"],\n        animationOut: [\"animated\", \"fadeOut\"],\n        dismiss: {\n          duration: 4000,\n          onScreen: true\n        }\n      });\n\n      //i am stuck here, cannot do this\n      // checkPrice(url);\n    } else {\n      store.addNotification({\n        title: \"Error:\",\n        message: \"URL cannot be empty\",\n        type: \"danger\",\n        insert: \"top\",\n        container: \"top-right\",\n        animationIn: [\"animated\", \"fadeIn\"],\n        animationOut: [\"animated\", \"fadeOut\"],\n        dismiss: {\n          duration: 2000,\n          onScreen: true\n        }\n      });\n    }\n}\n\nfunction handleSubmit() {\n    \n    const currDate = (new Date().getTime()).toString(10);\n    if(brandValue !== null && categoryValue !== null && categoryValue !== undefined && name !== '' && url !== ''){\n      createProduct( \n                    {\n                      variables: {name: name, \n                                  category: categoryValue, \n                                  brand: brandValue, \n                                  price: 0, \n                                  url: url, \n                                  minPrice: minPrice,\n                                  priceArray:[], \n                                  dateArray:[currDate],\n                                  userID: userData.user.id\n                                },\n                      refetchQueries: [{ query: PRODUCTS_QUERY}] \n                    }\n                 )\n                 setName('');\n\n                 setPrice('');\n\n                 setUrl('');   \n\n                store.addNotification({\n                  title: \"Success:\",\n                  message: \"Your product is being processed! Please wait a moment for it to appear on your Products Page\",\n                  type: \"success\",\n                  insert: \"top\",\n                  container: \"top-right\",\n                  animationIn: [\"animated\", \"fadeIn\"],\n                  animationOut: [\"animated\", \"fadeOut\"],\n                  dismiss: {\n                    duration: 2000,\n                    onScreen: true\n                  }\n                });\n    } else {\n      store.addNotification({\n        title: \"Error:\",\n        message: \"Not at required fields are entered\",\n        type: \"danger\",\n        insert: \"top\",\n        container: \"top-right\",\n        animationIn: [\"animated\", \"fadeIn\"],\n        animationOut: [\"animated\", \"fadeOut\"],\n        dismiss: {\n          duration: 2000,\n          onScreen: true\n        }\n        });\n    }\n}\n\n  if (loading) return <p>Loading...</p>;\n  if (error) return <p>Error! :(</p>;\n\n  return (\n    <div>\n        <GeneralTextField\n          onChange ={handleUrlChange}\n          value = {url}\n          placeholder =\"Product url\"\n        />\n        <div style={{paddingTop: 10, paddingBottom: 50}}>\n          <GeneralButton onClick={crawl}\n            fullWidth={true} className={classes.textField} text=\"Autocomplete\" />\n        </div>\n\n        {/* <Loading2 /> */}\n\n      <CategoryOptions callBackFromParent={setCategoryValue}/>\n\n\n      {/* <div>{`brandValue: ${brandValue !== null ? `'${brandValue}'` : 'null'}`}</div>\n      <div>{`inputBrandValue: '${inputBrandValue}'`}</div> */}\n      <div className={classes.textField} style={{paddingTop: 20}}>\n        <Autocomplete\n          brandValue={brandValue}\n          onChange={(event, newValue) => {\n            setBrandValue(newValue);\n          }}\n          inputBrandValue={inputBrandValue}\n          onInputChange={(event, newInputValue) => {\n            setInputBrandValue(newInputValue);\n          }}\n          id=\"controllable-states-demo\"\n          options={brandOptions}\n          // style={{ width: 300 }}\n          renderInput={(params) => <TextField {...params} label=\"Brand\" variant=\"outlined\" />}\n        />\n      </div>\n\n\n\n      <div>\n        <GeneralTextField\n        //PRODUCT NAME\n          id=\"outlined-full-width\"\n          // style={{ margin: 8 }}\n          placeholder=\"Product name\"\n          fullWidth={true}\n          margin=\"normal\"\n          className={classes.textField}\n          InputLabelProps={{\n            shrink: true,\n          }}\n          variant=\"outlined\"\n          onChange ={handleNameChange}\n          value = {name}\n        />\n        \n{/* \n        <TextField\n          id=\"outlined-margin-none\"\n          placeholder=\"Price\"\n          margin=\"normal\"\n          className={classes.textField}\n          variant=\"outlined\"\n          onChange ={handlePriceChange}\n          value = {price}\n        /> */}\n        <GeneralTextField\n          id=\"outlined-margin-none\"\n          placeholder=\"Price floor\"\n          className={classes.textField}\n          onChange={handleMinPriceChange}\n        />\n\n        <div style={{paddingTop: 10}}>\n          <GeneralButton \n            onClick={handleSubmit}\n            fullWidth={true}\n            text=\"Submit\"\n          />\n\n        </div>\n\n      </div>\n    </div>\n  );\n}\n","import React, { useState, useContext } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport TextField from '@material-ui/core/TextField';\nimport { gql } from 'apollo-boost';\nimport {useMutation } from '@apollo/react-hooks';\nimport GeneralTextField from '../Input/GeneralTextField';\nimport GeneralButton from '../Input/GeneralButton';\nimport UserContext from '../context/UserContext';\nimport { store } from 'react-notifications-component';\n\n\n\nconst CATEGORIES_QUERY = gql `\n{\n    categories {\n        id\n        name\n    }\n}`;\n\nconst CREATE_CATEGORY_MUTATION = gql`\n  mutation createCategory($name: String!, $userID: String!){\n  createCategory(name: $name, userID: $userID) {\n    id\n    name\n    userID\n  }\n}\n`;\n\nconst useStyles = makeStyles((theme) => ({\n  textField: {\n    marginLeft: theme.spacing(1),\n    marginRight: theme.spacing(1),\n    marginBottom: theme.spacing(1),\n  },\n}));\n\nexport default function AddNewCategory() {\n  const classes = useStyles();\n  const [createCategory] = useMutation(CREATE_CATEGORY_MUTATION);\n  const [name, setName] = useState('');\n  const { userData } = useContext(UserContext);\n\n  function handleNameChange(e) {\n    const newName = e.target.value;\n    setName(newName);\n  }\n\n  function handleSubmit() {\n    if(name !== '' ){\n      createCategory( \n                    {\n                        variables: {name: name, userID: userData.user.id},\n                        refetchQueries: [{ query: CATEGORIES_QUERY}] \n                    }\n                 )\n      setName('');\n      store.addNotification({\n        title: \"Success!\",\n        message: \"Your product is being processed! Please wait a moment for it to appear on your Products Page\",\n        type: \"success\",\n        insert: \"top\",\n        container: \"top-right\",\n        animationIn: [\"animated\", \"fadeIn\"],\n        animationOut: [\"animated\", \"fadeOut\"],\n        dismiss: {\n          duration: 2000,\n          onScreen: true\n        }\n      });\n      \n  } else {\n    store.addNotification({\n      title: \"Error:\",\n      message: \"Not all required fields are entered\",\n      type: \"danger\",\n      insert: \"top\",\n      container: \"top-right\",\n      animationIn: [\"animated\", \"fadeIn\"],\n      animationOut: [\"animated\", \"fadeOut\"],\n      dismiss: {\n        duration: 2000,\n        onScreen: true\n      }\n    });\n  }\n}\n\n  return (\n      <div>\n        <GeneralTextField\n        //Category NAME\n          placeholder=\"Add New Category\"\n          onChange ={handleNameChange}\n          value = {name}\n        />\n        <div style={{paddingTop: 10}}>\n          <GeneralButton \n          onClick={handleSubmit} \n          fullWidth \n          text=\"Submit\" />\n        </div>\n\n      </div>\n  );\n}\n","import React, {useContext } from 'react';\nimport Form from '../Input/Form';\nimport AddNewCategory from '../Input/AddNewCategory';\nimport Paper from '@material-ui/core/Paper';\nimport UserContext from '../context/UserContext';\nimport { Link } from \"react-router-dom\";\n\nfunction AddNew() {\n    const { userData } = useContext(UserContext);\n    return (\n        <>\n        {userData.user ? (\n            <Paper style={{ backgroundColor: '#212029', margin: 30 , padding: 30}}>   \n            <div>\n                {/* <h1>Add a new product to track!</h1> */}\n                {/* <h2>Add new category</h2>\n                <AddNewCategory/> */}\n                <h2>Add your new product below</h2>\n                <Form />\n            </div>\n            </Paper>\n        ) : (\n            <>\n            <h2>You are not logged in</h2>\n            <Link to=\"/login\">Log in</Link>\n            </>\n        )}\n        </>)\n}\n\nexport default AddNew;","import React, { useState, useEffect, useContext, forwardRef, useRef, Fragment } from 'react';\n// import MuiThemeProvider from '@material-ui/core/styles/MuiThemeProvider';\nimport { createMuiTheme, ThemeProvider } from '@material-ui/core/styles';\nimport { gql } from 'apollo-boost';\nimport { useQuery, useLazyQuery, useMutation } from '@apollo/react-hooks';\nimport UserContext from '../context/UserContext';\nimport SortIcon from '@material-ui/icons/Sort';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport UpdateIcon from '@material-ui/icons/Update';\nimport AddBox from '@material-ui/icons/AddBox';\nimport ArrowDownward from '@material-ui/icons/ArrowDownward';\nimport Check from '@material-ui/icons/Check';\nimport ChevronLeft from '@material-ui/icons/ChevronLeft';\nimport ChevronRight from '@material-ui/icons/ChevronRight';\nimport Clear from '@material-ui/icons/Clear';\nimport DeleteOutline from '@material-ui/icons/DeleteOutline';\nimport Edit from '@material-ui/icons/Edit';\nimport FilterList from '@material-ui/icons/FilterList';\nimport FirstPage from '@material-ui/icons/FirstPage';\nimport LastPage from '@material-ui/icons/LastPage';\nimport Remove from '@material-ui/icons/Remove';\nimport SaveAlt from '@material-ui/icons/SaveAlt';\nimport Search from '@material-ui/icons/Search';\nimport ViewColumn from '@material-ui/icons/ViewColumn';\nimport MoreIcon from '@material-ui/icons/More';\nimport CompareArrowsIcon from '@material-ui/icons/CompareArrows';\nimport ToggleButton from '@material-ui/lab/ToggleButton';\nimport ToggleButtonGroup from '@material-ui/lab/ToggleButtonGroup';\n// import Divider from '@material-ui/core/Divider';\nimport { makeStyles, withTheme } from '@material-ui/core/styles';\nimport MaterialTable, { MTableToolbar } from 'material-table';\nimport { TablePagination } from \"@material-ui/core\";\nimport Loading from '../Loaders/Loading';\n\n\nconst tableIcons = {\n    Add: forwardRef((props, ref) => <AddBox {...props} ref={ref} />),\n    Check: forwardRef((props, ref) => <Check {...props} ref={ref} />),\n    Clear: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\n    Delete: forwardRef((props, ref) => <DeleteOutline {...props} ref={ref} />),\n    DetailPanel: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\n    Edit: forwardRef((props, ref) => <Edit {...props} ref={ref} />),\n    Export: forwardRef((props, ref) => <SaveAlt {...props} ref={ref} />),\n    Filter: forwardRef((props, ref) => <FilterList {...props} ref={ref} />),\n    FirstPage: forwardRef((props, ref) => <FirstPage {...props} ref={ref} />),\n    LastPage: forwardRef((props, ref) => <LastPage {...props} ref={ref} />),\n    NextPage: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\n    PreviousPage: forwardRef((props, ref) => <ChevronLeft {...props} ref={ref} />),\n    ResetSearch: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\n    Search: forwardRef((props, ref) => <Search {...props} ref={ref} />),\n    SortArrow: forwardRef((props, ref) => <ArrowDownward {...props} ref={ref} />),\n    ThirdStateCheck: forwardRef((props, ref) => <Remove {...props} ref={ref} />),\n    ViewColumn: forwardRef((props, ref) => <ViewColumn {...props} ref={ref} />)\n  };\n\nconst PRODUCTS_QUERY = gql `\n{\n    products {\n        id\n        name\n        price\n        category\n        brand\n        url\n        userID\n        priceArray\n            dateArray\n    }\n}`;\n\n// const USER_PRODUCTS_QUERY = gql `\n//     query UserProducts($info: String!) {\n//         userProducts(info: $info) {\n//             id\n//             name\n//             price\n//             category\n//             brand\n//             url\n//             userID\n            \n//         }\n//     }\n// `;\n\nconst REMOVE_MUTATION = gql `\n    mutation RemoveProduct($id: ID!) {\n        removeProduct(id: $id)\n    }\n`;\n\nconst UPDATE_PRODUCT_MUTATION = gql `\nmutation UpdateProduct($id: ID!, $name: String!, $url: String!) {\n    updateProduct(id: $id, name: $name, url: $url)\n}\n`;\n\nconst ADD_PRICE_AND_DATE_MUTATION = gql `\n    mutation addPriceAndDate($id: ID!, $url: String!, $date: String!, $price: Float!, $priceArray: [Float]!, $dateArray: [String!]!) {\n        addPriceAndDate(id: $id, url: $url, date: $date, price: $price, priceArray: $priceArray, dateArray: $dateArray)\n    }\n`;\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n      width: '100%',\n      maxWidth: '36ch',\n      color: '#fff',\n      backgroundColor: theme.palette.background.paper,\n    },\n    inline: {\n      display: 'inline',\n    },   \n    toolbar: {\n        backgroundColor: \"white\"\n    },\n    caption: {\n        color: \"red\",\n        fontSize: \"20px\"\n    },\n    selectIcon: {\n        color: \"green\"\n    },\n    select: {\n        color: \"green\",\n        fontSize: \"20px\"\n    },\n    actions: {\n        color: \"blue\"\n    }\n  }));\n\n export default function NewMaterialTable(props) {\n\n    const { loading, error, data } = useQuery(PRODUCTS_QUERY);\n\n    const [removeProduct] = useMutation(REMOVE_MUTATION);\n\n    const [updateProduct] = useMutation(UPDATE_PRODUCT_MUTATION);\n\n    // const [currCat, setCat] = useState();\n\n    const [groupingBoolean, setGroupingBoolean] = useState(false);\n\n    const [urlBoolean, setUrlBoolean] = useState(true);\n\n    // const [displayedPdts, setDisplayedPdts] = useState([]);\n\n    const { userData } = useContext(UserContext);\n\n    const [addPriceAndDate] = useMutation(ADD_PRICE_AND_DATE_MUTATION);\n\n    // const [userProducts, {loading,error, data }] = useLazyQuery(USER_PRODUCTS_QUERY, {fetchPolicy: \"cache-and-network\"});\n\n    // const { loading, error, data } = useQuery(USER_PRODUCTS_QUERY, { variables: { info: props.userID } });\n\n    const classes = useStyles();\n\n    // const [productData, setProductData] = useState(null);\n\n    //For dates\n    const [today, setToday] = useState(new Date());  \n\n    useEffect(() => {\n      const interval = setInterval(() => {\n          setToday(new Date());\n      }, 1000);\n      return () => clearInterval(interval);\n    }, []);\n\n    const currDate = (today.getTime()).toString(10);\n\n    // useEffect(() => {\n    //     // if(userData.user) {\n    //     //     userProducts( { variables: { info: userData.user.id }, fetchPolicy: \"cache-and-network\" })\n    //     // }\n\n    //     setProductData(data);\n\n    // }, [data, userData])\n\n    // const tableRef = useRef();\n\n    function handleUpdate(productID, productUrl, productDateArray, productPriceArray) {\n        addPriceAndDate(\n            {\n                variables: \n                {\n                    id: productID,\n                    url: productUrl,\n                    date: currDate,\n                    price: 0,  \n                    priceArray:productPriceArray, \n                    dateArray:productDateArray,\n                }, \n                refetchQueries: [{ query: PRODUCTS_QUERY}] \n\n            }\n        )\n    }\n\n    const theme = createMuiTheme({\n        palette: {\n            type: 'dark',\n          },\n      });\n\n\n    if (loading) return <Loading open={true}/>;\n    if (error) return <p>Error! :(</p>;\n\n    // if (data && data.products) {\n    //     console.log(\"dataproducts in\")\n    //     setProductPrices(data.products);\n    // }\n\n    // const load = () => {\n    //     userProducts({ variables: { info: userData.user.id } })\n    // }\n    const title = <div>My Products</div>;\n\n    return (\n        <>\n            {\n                data ? (\n\n                    <ThemeProvider theme={theme}>\n                        <MaterialTable\n                            // tableRef={tableRef}\n                            icons={tableIcons}\n                            style={{ backgroundColor: '#212029',margin: 30 , padding: 30}}\n                            title= {title}\n                            columns={[\n                                { title: 'Name', field: 'name' },\n                                { title: 'Category', field: 'category', editable: 'never'},\n                                { title: 'Brand', field: 'brand', editable: 'never' },\n                                { title: 'Price', field: 'price', type: 'currency', editable: 'never' },\n                                { title: 'ID', field: 'id', hidden: true},\n                                { title: 'URL', field: 'url', hidden: urlBoolean, editable: 'onUpdate'},\n                                { title: 'Price Array', field: 'priceArray', hidden: true},\n                                { title: 'Date Array', field: 'dateArray', hidden: true},\n                            ]}\n\n                            data= {data.products.filter((product) => product.userID === userData.user.id)}\n                            // data = {userProducts({ variables: { info: userData.user.id } })}\n                            // data = {data.products}\n                            // data = {new Promise((resolve, reject) => resolve({data: data.products}))}\n                            editable={{  \n                                onRowUpdate: (newData, oldData) =>\n                                new Promise((resolve, reject) => {\n                                    setTimeout(() => {\n                                        const productID = oldData.id;\n                                        console.log(newData);\n                                        console.log(oldData);\n                                        updateProduct(\n                                            {\n                                                variables: \n                                                {\n                                                    id: productID,\n                                                    name: newData.name,\n                                                    url: newData.url\n                                                },\n                                                refetchQueries: [{ query: PRODUCTS_QUERY}] \n                                            }\n                                        )\n                                    resolve();\n                                    }, 1000)\n                                })\n                            }}\n                            actions={[\n                                {\n                                    icon: UpdateIcon,\n                                    tooltip: 'Update Product',\n                                    onClick: (event, rowData) => {\n                                        console.log(rowData);\n                                        handleUpdate(rowData.id, rowData.url, rowData.dateArray, rowData.priceArray)\n                                    }\n                                },\n                                {\n                                icon: DeleteIcon,\n                                tooltip: 'Delete Product',\n                                onClick: (event, rowData) => {removeProduct(\n                                        {\n                                            variables: \n                                            {\n                                            id: rowData.id},\n                                            refetchQueries: [{ query: PRODUCTS_QUERY}] \n                                        }\n                                    )\n                                    }\n                                },  \n                            ]}\n                            \n                            components={{\n                                Toolbar: props => (\n                                <div>\n                                    <MTableToolbar {...props} />\n                                    <div style={{padding: '0px 10px'}}>\n                                        <ToggleButtonGroup size = \"small\" style ={{position:\"relative\",margin: 5 , padding: 5 }}>\n                                            <ToggleButton style ={{ colour :\"#fff\"}} value=\"Show URL\" aria-label=\"Show URL\">\n                                                <MoreIcon  onClick ={() => setUrlBoolean(!urlBoolean)}/>\n                                            </ToggleButton>\n                                            <ToggleButton value=\"Enable Sort\" aria-label=\"Enable Sort\">\n                                                <SortIcon  onClick ={() => setGroupingBoolean(!groupingBoolean)}/>\n                                            </ToggleButton>\n                                        </ToggleButtonGroup>\n                                    </div>\n                                </div>\n                                ),            \n                            }}\n                            \n                            options={{\n                                actionsColumnIndex: -1,\n                                grouping: groupingBoolean,\n                                headerStyle: {\n                                    backgroundColor: '#212029',\n                                },\n                            }}\n                        />\n                    </ThemeProvider>\n                        \n                ) : (\n                    null\n                )\n            }\n         </>\n\n    )\n\n}\n    \n    \n\n","import React, { useState, useEffect, useContext, forwardRef, useRef } from 'react';\nimport { gql } from 'apollo-boost';\nimport { useQuery, useLazyQuery, useMutation } from '@apollo/react-hooks';\nimport Paper from '@material-ui/core/Paper';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport IconButton from '@material-ui/core/IconButton';\nimport ClearIcon from '@material-ui/icons/Clear';\nimport CategoryOptions from '../Input/CategoryOptions'\nimport { Link } from \"react-router-dom\";\nimport UserContext from '../context/UserContext';\nimport Typography from '@material-ui/core/Typography';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport { makeStyles } from '@material-ui/core/styles';\nimport AddBox from '@material-ui/icons/AddBox';\nimport ArrowDownward from '@material-ui/icons/ArrowDownward';\nimport Check from '@material-ui/icons/Check';\nimport ChevronLeft from '@material-ui/icons/ChevronLeft';\nimport ChevronRight from '@material-ui/icons/ChevronRight';\nimport Clear from '@material-ui/icons/Clear';\nimport DeleteOutline from '@material-ui/icons/DeleteOutline';\nimport Edit from '@material-ui/icons/Edit';\nimport FilterList from '@material-ui/icons/FilterList';\nimport FirstPage from '@material-ui/icons/FirstPage';\nimport LastPage from '@material-ui/icons/LastPage';\nimport Remove from '@material-ui/icons/Remove';\nimport SaveAlt from '@material-ui/icons/SaveAlt';\nimport Search from '@material-ui/icons/Search';\nimport ViewColumn from '@material-ui/icons/ViewColumn';\n// import Divider from '@material-ui/core/Divider';\n// import MaterialTable from 'material-table';\nimport NewMaterialTable from '../Table/NewMaterialTable';\n//Loading\nimport Loading from '../Loaders/Loading';\n\nconst tableIcons = {\n    Add: forwardRef((props, ref) => <AddBox {...props} ref={ref} />),\n    Check: forwardRef((props, ref) => <Check {...props} ref={ref} />),\n    Clear: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\n    Delete: forwardRef((props, ref) => <DeleteOutline {...props} ref={ref} />),\n    DetailPanel: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\n    Edit: forwardRef((props, ref) => <Edit {...props} ref={ref} />),\n    Export: forwardRef((props, ref) => <SaveAlt {...props} ref={ref} />),\n    Filter: forwardRef((props, ref) => <FilterList {...props} ref={ref} />),\n    FirstPage: forwardRef((props, ref) => <FirstPage {...props} ref={ref} />),\n    LastPage: forwardRef((props, ref) => <LastPage {...props} ref={ref} />),\n    NextPage: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\n    PreviousPage: forwardRef((props, ref) => <ChevronLeft {...props} ref={ref} />),\n    ResetSearch: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\n    Search: forwardRef((props, ref) => <Search {...props} ref={ref} />),\n    SortArrow: forwardRef((props, ref) => <ArrowDownward {...props} ref={ref} />),\n    ThirdStateCheck: forwardRef((props, ref) => <Remove {...props} ref={ref} />),\n    ViewColumn: forwardRef((props, ref) => <ViewColumn {...props} ref={ref} />)\n  };\n\nconst PRODUCTS_QUERY = gql `\n{\n    products {\n        id\n        name\n        price\n        category\n        brand\n        url\n        userID\n    }\n}`;\n\nconst USER_PRODUCTS_QUERY = gql `\n    query UserProducts($info: String!) {\n        userProducts(info: $info) {\n            id\n            name\n            price\n            category\n            brand\n            url\n            userID\n        }\n    }\n`;\n\nconst REMOVE_MUTATION = gql `\n    mutation RemoveProduct($id: ID!) {\n        removeProduct(id: $id)\n    }\n`;\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n      width: '100%',\n      maxWidth: '36ch',\n    //   backgroundColor: theme.palette.background.paper,\n      backgroundColor: \"#212029\"\n    },\n    inline: {\n      display: 'inline',\n    },\n    paper: {\n        padding: theme.spacing(1),\n        textAlign: 'center',\n        // color: theme.palette.text.secondary,\n        backgroundColor: \"#212029\",\n        // opacity: 0.95,\n      },\n  }));\n\n function ProductPage() {\n\n    // const { loading, error, data } = useQuery(PRODUCTS_QUERY);\n\n    const [removeProduct] = useMutation(REMOVE_MUTATION);\n\n    const [currCat, setCat] = useState();\n\n    const [displayedPdts, setDisplayedPdts] = useState([]);\n\n    const { userData } = useContext(UserContext);\n\n    const [userProducts, {loading,error, data }] = useLazyQuery(USER_PRODUCTS_QUERY, {pollInterval: 500});\n\n    // const { loading, error, data } = useQuery(USER_PRODUCTS_QUERY, { variables: { info: userData.user.id } });\n\n    const classes = useStyles();\n\n\n    // useEffect(() => {\n    //     if(data) {\n    //         setDisplayedPdts(data\n    //             .products\n    //             .filter(\n    //                 (product) => \n    //                 currCat === undefined ||\n    //                 currCat === null || \n    //                 currCat === product.category\n    //             )\n    //         )\n    //     }\n    // }, \n    // //page is re-rendered whenever the currCat or data changes\n    // [currCat, data]);\n\n    // const [productPrices, setProductPrices] = useState(null);\n\n    // useEffect(() => {\n    //     if(userData.user) {\n    //         userProducts( { variables: { info: userData.user.id }, onCompleted: true })\n    //         if(data) {\n    //             setProductPrices(data)\n    //         }\n    //     }\n        \n    // }, [data, userData])\n\n    // const tableRef = useRef();\n\n    if (loading) return <Loading open={true}/>;\n    if (error) return <p>Error! :(</p>;\n\n    // if (data && data.products) {\n    //     console.log(\"dataproducts in\")\n    //     setProductPrices(data.products);\n    // }\n\n    // const load = () => {\n    //     userProducts({ variables: { info: userData.user.id } })\n    // }\n\n    return (\n        <>\n            {\n                userData.user ? (\n                    <div>\n                    < NewMaterialTable userID = {userData.user.id}/>\n                        </div>\n                       \n                ) : (\n                    <>\n                    <h2>You are not logged in</h2>\n                    <Link to=\"/login\">Log in</Link>\n                    </>\n                )\n            }\n         </>\n\n    )\n\n    // return (\n    //     <>\n    //     {userData.user ? (\n    //         <Paper style={{ margin: 30 , padding: 30}}>   \n    //         <h1>My Products</h1>\n    //         <List>\n    //             <CategoryOptions callBackFromParent={setCat}/>\n    //             {//data.products\n    //             displayedPdts //changes with useEffect\n    //             .filter((product) => product.userID === userData.user.id)\n    //             .map((product) => {\n    //             {/* const labelId = `checkbox-list-label-${product.id}`; */}\n\n    //             return (\n                    \n    //                 <ListItem alignItems=\"flex-start\">\n    //                 {/* <ListItemText \n    //                 id={labelId} \n    //                 primary={`${product.name}${product.category} ${product.price}`} /> */}\n    //                 <ListItemText\n    //                 primary={`${product.name}`}\n    //                 secondary={\n    //                     <React.Fragment>\n    //                     <Typography\n    //                         component=\"span\"\n    //                         variant=\"body2\"\n    //                         className={classes.inline}\n    //                         color=\"textPrimary\"\n    //                     >\n    //                         {`${product.category}`}\n    //                     </Typography>\n    //                     {`  S$${product.price}`}\n    //                     </React.Fragment>\n    //                 }/>\n    //                 <ListItemSecondaryAction>\n    //                     <IconButton onClick={\n    //                     () => {removeProduct(\n    //                     {\n    //                         variables: \n    //                         {\n    //                         id: product.id},\n    //                         refetchQueries: [{ query: PRODUCTS_QUERY}] \n    //                     }\n    //                     )\n    //                     }}>\n    //                     <ClearIcon />\n    //                     </IconButton>\n    //                 </ListItemSecondaryAction>\n    //                 </ListItem>\n                    \n                    \n                    \n    //             );\n    //             })}\n    //         </List>\n    //     </Paper>\n    //     ) : (\n    //         <>\n    //         <h2>You are not logged in</h2>\n    //         <Link to=\"/login\">Log in</Link>\n    //         </>\n    //     )}\n    //     </>\n    // )\n}\n    \n    \n\nexport default ProductPage;","import React, {useContext} from 'react';\nimport { gql } from 'apollo-boost';\nimport { useQuery, useMutation } from '@apollo/react-hooks';\nimport Paper from '@material-ui/core/Paper';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport IconButton from '@material-ui/core/IconButton';\nimport ClearIcon from '@material-ui/icons/Clear';\nimport AddNewCategory from '../Input/AddNewCategory';\nimport UserContext from '../context/UserContext';\nimport { Link } from \"react-router-dom\";\n\nconst CATEGORIES_QUERY = gql `\n{\n    categories {\n        id\n        name\n        userID\n    }\n}`;\n\nconst PRODUCTS_QUERY = gql `\n{\n    products {\n        id\n        name\n        price\n        category\n    }\n}`;\n\nconst REMOVE_MUTATION = gql `\n    mutation RemoveProduct($id: ID!) {\n        removeProduct(id: $id)\n    }\n`;\n\nconst REMOVE_CATEGORIES_MUTATION = gql `\n    mutation RemoveCategory($id: ID!) {\n        removeCategory(id: $id)\n    }\n`;\n\nfunction CategoryPage(props) {\n    const { loading: productLoading, error: productError, data: productData } = useQuery(PRODUCTS_QUERY);\n    \n    const { loading, error, data } = useQuery(CATEGORIES_QUERY);\n\n    const [removeProduct] = useMutation(REMOVE_MUTATION);\n\n    const [removeCategory] = useMutation(REMOVE_CATEGORIES_MUTATION);\n\n    const { userData } = useContext(UserContext);\n\n    function removeCategoryAndProduct(cat) {\n        removeCategory(\n            {\n                variables: {\n                    id: cat.id},\n                refetchQueries: [{ query: CATEGORIES_QUERY}] \n            }\n        )\n        productData.products.map((product) => {\n            if(product.category === cat.name) {\n                removeProduct(\n                    {\n                        variables: {\n                            id: product.id\n                        },\n                        refetchQueries: [{ query: PRODUCTS_QUERY}] \n                    }\n                )\n        \n            }\n            return null;\n        } \n        )\n    } \n    \n    if (loading) return <p>Loading...</p>;\n    if (error) return <p>Error! :(</p>;\n    if (productLoading) return <p>Products Loading...</p>;\n    if (productError) return <p>Products Error! :(</p>;\n    \n\n    let currUserID;\n    if(userData !== undefined && userData.user !== undefined) {\n        currUserID = String(userData.user.id);\n    }\n        \n    return (\n        <>\n        {userData.user ?\n\n        (<Paper style={{ backgroundColor: '#212029', margin: 30 , padding: 30}}>   \n        \n            <h1>My Categories</h1>\n            <List>\n                {\n                    data.categories.map(\n                        (category) => {\n                            if(category.userID === currUserID) {\n                                // number of products in each category\n                                var numOf = 0;\n                                productData.products.map((product) => product.category === category.name? numOf += 1: numOf += 0 );\n\n                                return (\n                                    <ListItem>\n                                        <ListItemText primary={`${category.name}`} secondary={`${numOf} Items`} />\n                                        <ListItemSecondaryAction>\n                                            <IconButton onClick = { () => removeCategoryAndProduct(category)}>\n                                                <ClearIcon />\n                                            </IconButton>\n                                        </ListItemSecondaryAction>\n                                    </ListItem>\n                                );\n                            } else {\n                                return null;\n                            }\n                        }\n                    )\n                }\n            </List>\n            <AddNewCategory/>\n        </Paper>\n        ) : (\n            <>\n            <h2>You are not logged in</h2>\n            <Link to=\"/login\">Log in</Link>\n            </>\n        )}\n        </>\n    )\n} \n\nexport default CategoryPage;","import React, { useState, useEffect,useContext } from 'react';\nimport { gql } from 'apollo-boost';\nimport { useQuery, useMutation } from '@apollo/react-hooks';\nimport Paper from '@material-ui/core/Paper';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport IconButton from '@material-ui/core/IconButton';\nimport ClearIcon from '@material-ui/icons/Clear';\nimport ReplayIcon from '@material-ui/icons/Replay';\nimport CategoryOptions from '../Input/CategoryOptions'\nimport { Link } from \"react-router-dom\";\nimport UserContext from '../context/UserContext';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\n\nconst PRODUCTS_QUERY = gql `\n{\n    products {\n        id\n        name\n        price\n        category\n        url\n        userID\n        priceArray\n        dateArray\n    }\n}`;\n\nconst REMOVE_MUTATION = gql `\n    mutation RemoveProduct($id: ID!) {\n        removeProduct(id: $id)\n    }\n`;\n\nconst ADD_PRICE_AND_DATE_MUTATION = gql `\n    mutation addPriceAndDate($id: ID!, $url: String!, $date: String!, $price: Float!, $priceArray: [Float!]!, $dateArray: [String!]!) {\n        addPriceAndDate(id: $id, url: $url, date: $date, price: $price, priceArray: $priceArray, dateArray: $dateArray)\n    }\n`;\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n      width: '100%',\n      maxWidth: '36ch',\n      backgroundColor: theme.palette.background.paper,\n    },\n    inline: {\n      display: 'inline',\n    },\n  }));\n\n function UpdateProduct() {\n\n    const { loading, error, data } = useQuery(PRODUCTS_QUERY);\n\n    const [removeProduct] = useMutation(REMOVE_MUTATION);\n\n    const [addPriceAndDate] = useMutation(ADD_PRICE_AND_DATE_MUTATION);\n\n    const [currCat, setCat] = useState();\n\n    const [displayedPdts, setDisplayedPdts] = useState([]);\n\n    const { userData } = useContext(UserContext);\n\n    const classes = useStyles();\n\n    // const [productPrices, setProductPrices] = useState([]);\n\n    useEffect(() => {\n        if(data && userData && userData.user) {\n            setDisplayedPdts(data\n                .products\n                .filter(\n                    (product) => (product.userID === userData.user.id) \n                        && (currCat === undefined || currCat === null || currCat === product.category))\n                )\n        }\n    }, \n    //page is re-rendered whenever the currCat or data changes\n    [currCat, data, userData]);\n\n\n    //For dates\n    const [today, setToday] = useState(new Date());  \n    useEffect(() => {\n      const interval = setInterval(() => {\n          setToday(new Date());\n      }, 1000);\n      return () => clearInterval(interval);\n    }, []);\n\n    const currDate = (today.getTime()).toString(10);\n\n    function handleUpdate(product) {\n        addPriceAndDate(\n            {\n                variables: \n                {\n                    id: product.id,\n                    url: product.url,\n                    date: currDate,\n                    price: 0,  \n                    priceArray:product.priceArray, \n                    dateArray:product.dateArray,\n                }\n            }\n        )\n    }\n\n    if (loading) return <p>Loading...</p>;\n    if (error) return <p>Error! :(</p>;\n\n    return (\n        <>\n        {userData.user ? (\n            <Paper style={{ backgroundColor: '#27293d', margin: 30 , padding: 30}}>   \n            <h1>Product list</h1>\n            <List>\n                <CategoryOptions callBackFromParent={setCat}/>\n                { displayedPdts //changes with useEffect\n                    .map((product) => {\n                        const labelId = `checkbox-list-label-${product.id}`;\n\n                        return (\n                            <ListItem >\n                                <ListItemText \n                                id={labelId} \n                                primary={`${product.name}`} \n                                secondary={\n                                    <React.Fragment>\n                                    <Typography\n                                        component=\"span\"\n                                        variant=\"body2\"\n                                        className={classes.inline}\n                                        color=\"textPrimary\"\n                                    >\n                                        {`${product.category}`}\n                                    </Typography>\n                                    {`  S$${product.price}`}\n                                    </React.Fragment>\n                                }/>\n                                    <ListItemSecondaryAction>\n                                        <IconButton onClick={\n                                            () => {handleUpdate(product)\n                                            }}>\n                                            <ReplayIcon />\n                                        </IconButton>\n                                        <IconButton onClick={\n                                            () => {removeProduct(\n                                            {\n                                                variables: \n                                                {\n                                                id: product.id},\n                                                refetchQueries: [{ query: PRODUCTS_QUERY}] \n                                            }\n                                            )\n                                            }}>\n                                            <ClearIcon />\n                                        </IconButton>\n                                    </ListItemSecondaryAction>\n                            </ListItem>\n                        );\n                    }\n                    )\n                }\n            </List>\n            \n        </Paper>\n        ) :(\n            <>\n            <h2>You are not logged in</h2>\n            <Link to=\"/login\">Log in</Link>\n            </>\n        )}\n        </>\n    )\n}\n    \n    \n\nexport default UpdateProduct;","import React, { useState, useContext } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport UserContext from \"../context/UserContext\";\nimport Axios from \"axios\";\nimport { store } from 'react-notifications-component';\nimport GeneralButton from '../Input/GeneralButton';\nimport GeneralTextField from '../Input/GeneralTextField';\nimport { makeStyles } from '@material-ui/core/styles';\n\nexport default function Register() {\n  const [email, setEmail] = useState();\n  const [password, setPassword] = useState();\n  const [passwordCheck, setPasswordCheck] = useState();\n  const [displayName, setDisplayName] = useState();\n\n  const { setUserData } = useContext(UserContext);\n  const history = useHistory();\n\n  const useStyles = makeStyles((theme) => ({\n    textField: {\n      marginLeft: theme.spacing(1),\n      marginRight: theme.spacing(1),\n      marginBottom: theme.spacing(1),\n    },\n    root: {\n      width: '100%',\n      '& > * + *': {\n        marginTop: theme.spacing(2),\n      },\n    },\n  }));\n\n  const classes = useStyles();\n\n  const submit = async (e) => {\n    e.preventDefault();\n\n    try {\n      const newUser = { email, password, passwordCheck, displayName };\n      await Axios.post(\"http://localhost:5000/users/register\", newUser);\n      const loginRes = await Axios.post(\"http://localhost:5000/users/login\", {\n        email,\n        password,\n      });\n      setUserData({\n        token: loginRes.data.token,\n        user: loginRes.data.user,\n      });\n      localStorage.setItem(\"auth-token\", loginRes.data.token);\n      history.push(\"/\");\n      store.addNotification({\n        title: \"Registration successful:\",\n        message: `Please log in`,\n        type: \"success\",\n        insert: \"top\",\n        container: \"top-right\",\n        animationIn: [\"animated\", \"fadeIn\"],\n        animationOut: [\"animated\", \"fadeOut\"],\n        dismiss: {\n          duration: 2000,\n          onScreen: true\n        }\n      });\n    } catch (err) {\n      if(err.response.data.msg) {\n        store.addNotification({\n          title: \"Error:\",\n          message: `${err.response.data.msg}`,\n          type: \"danger\",\n          insert: \"top\",\n          container: \"top-right\",\n          animationIn: [\"animated\", \"fadeIn\"],\n          animationOut: [\"animated\", \"fadeOut\"],\n          dismiss: {\n            duration: 2000,\n            onScreen: true\n          }\n        });\n      }\n    }\n  };\n\n  return (\n    <div className=\"page\">\n      <h2>Register</h2>\n        <GeneralTextField\n          placeholder=\"Email\"\n          fullWidth\n          onChange ={(e) => setEmail(e.target.value)}\n          value = {email}\n        />\n        <GeneralTextField\n          placeholder=\"Password\"\n          onChange ={(e) => setPassword(e.target.value)}\n          value = {password}\n        />\n        <GeneralTextField\n          placeholder=\"Verify password\"\n          onChange ={(e) => setPasswordCheck(e.target.value)}\n          value = {password}\n        />\n        <GeneralTextField\n          placeholder=\"Display name\"\n          onChange ={(e) => setDisplayName(e.target.value)}\n        />\n\n        <div style={{marginTop: 15}}> \n          <GeneralButton \n              handleSubmit={submit}\n              fullWidth={true}\n              text=\"Submit\"\n          />\n        </div>\n    </div>\n  );\n}","import React, { useContext } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport UserContext from \"../context/UserContext\";\nimport { store } from 'react-notifications-component';\nimport GeneralButton from '../Input/GeneralButton';\n\nexport default function AuthOptions(props) {\n  const { userData, setUserData } = useContext(UserContext);\n\n  const history = useHistory();\n\n  const register = () => history.push(\"/register\");\n  const login = () => history.push(\"/login\");\n  const logout = () => {\n    setUserData({\n      token: undefined,\n      user: undefined,\n    });\n    localStorage.setItem(\"auth-token\", \"\");\n    props.closeDrawer()\n    history.push('/')\n    store.addNotification({\n      title: \"Success:\",\n      message: \"You have logged out\",\n      type: \"success\",\n      insert: \"top\",\n      container: \"top-right\",\n      animationIn: [\"animated\", \"fadeIn\"],\n      animationOut: [\"animated\", \"fadeOut\"],\n      dismiss: {\n        duration: 1000,\n        onScreen: true\n      }\n    });\n  };\n\n  return (\n    <div style={{marginTop: 5}}>\n      {userData.user ? (\n        <GeneralButton \n            handleSubmit={logout}\n            fullWidth={false}\n            text=\"Log out\"\n        />\n      ) : (\n        <>\n          <GeneralButton \n            handleSubmit={register}\n            fullWidth={false}\n            text=\"Register\"\n          />\n          <GeneralButton \n            handleSubmit={login}\n            fullWidth={false}\n            text=\"Log in\"\n          />\n        </>\n      )}\n    </div>\n  );\n}","import React, { useState, useContext } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport UserContext from \"../context/UserContext\";\nimport Axios from \"axios\";\nimport { store } from 'react-notifications-component';\nimport GeneralButton from '../Input/GeneralButton';\nimport GeneralTextField from '../Input/GeneralTextField';\nimport { makeStyles } from '@material-ui/core/styles';\n\nexport default function Login() {\n  const [email, setEmail] = useState();\n  const [password, setPassword] = useState();\n\n  const { setUserData } = useContext(UserContext);\n  const history = useHistory();\n  const Forgot = () => history.push(\"/ForgotPassword\");\n\n  const useStyles = makeStyles((theme) => ({\n    textField: {\n      marginLeft: theme.spacing(1),\n      marginRight: theme.spacing(1),\n      marginBottom: theme.spacing(1),\n    },\n    root: {\n      width: '100%',\n      '& > * + *': {\n        marginTop: theme.spacing(2),\n      },\n    },\n  }));\n\n  const classes = useStyles();\n\n  const submit = async (e) => {\n    e.preventDefault();\n    try {\n      const loginUser = { email, password };\n      const loginRes = await Axios.post(\n        \"http://localhost:5000/users/login\",\n        loginUser\n      );\n      setUserData({\n        token: loginRes.data.token,\n        user: loginRes.data.user,\n      });\n      localStorage.setItem(\"auth-token\", loginRes.data.token);\n      history.push(\"/\");\n      store.addNotification({\n        title: \"Login successful:\",\n        message: \"Welcome!\",\n        type: \"success\",\n        insert: \"top\",\n        container: \"top-right\",\n        animationIn: [\"animated\", \"fadeIn\"],\n        animationOut: [\"animated\", \"fadeOut\"],\n        dismiss: {\n          duration: 1000,\n          onScreen: true\n        }\n      });\n    } catch (err) {\n      if(err.response.data.msg) {\n        store.addNotification({\n          title: \"Error:\",\n          message: `${err.response.data.msg}`,\n          type: \"danger\",\n          insert: \"top\",\n          container: \"top-right\",\n          animationIn: [\"animated\", \"fadeIn\"],\n          animationOut: [\"animated\", \"fadeOut\"],\n          dismiss: {\n            duration: 1000,\n            onScreen: true\n          }\n      });\n      }\n    }\n  };\n  return (\n    <div>\n      <h2>Log in</h2>\n      <GeneralTextField\n          placeholder=\"Email\"\n          onChange ={(e) => setEmail(e.target.value)}\n          value = {email}\n          type=\"email\"\n        />\n      \n      <GeneralTextField\n          placeholder=\"Password\"\n          onChange ={(e) => setPassword(e.target.value)}\n          value = {password}\n          type=\"password\"\n        />\n        <div style={{marginTop: 15}}> \n          <GeneralButton \n              handleSubmit={submit}\n              fullWidth={true}\n              text=\"Log in\"\n          />  \n        </div>\n        {/* <div style={{marginTop: 15}}> \n          <GeneralButton \n              handleSubmit={Forgot}\n              fullWidth={true}\n              text=\"Forgot password\"\n          />  \n        </div> */}\n        <div \n        style={{\n          display: 'flex',\n          flexDirection: 'column', \n          alignItems: 'center', \n          justifyContent: 'center', \n          color: \"#4d6d80\",\n          marginTop: 15,\n          marginLeft: 15\n        }}> \n              {/* handleSubmit={Forgot}\n              fullWidth={true}\n              text=\"Forgot password\" */}\n              <button align=\"center\" onClick={Forgot}>Forgot Password</button>\n        </div>\n    </div>\n  );\n}","import React, { useState, useContext } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport UserContext from \"../context/UserContext\";\nimport Axios from \"axios\";\nimport { store } from 'react-notifications-component';\nimport GeneralButton from '../Input/GeneralButton';\nimport GeneralTextField from '../Input/GeneralTextField';\nimport { makeStyles } from '@material-ui/core/styles';\n\n\nexport default function ForgotPassword() {\n  const [email, setEmail] = useState();\n\n  const { setUserData } = useContext(UserContext);\n  const history = useHistory();\n\n  const useStyles = makeStyles((theme) => ({\n    textField: {\n      marginLeft: theme.spacing(1),\n      marginRight: theme.spacing(1),\n      marginBottom: theme.spacing(1),\n    },\n    root: {\n      width: '100%',\n      '& > * + *': {\n        marginTop: theme.spacing(2),\n      },\n    },\n  }));\n\n  const classes = useStyles();\n  const submit = async (e) => {\n    e.preventDefault();\n    try {\n      const user = { email };\n      const loginRes = await Axios.post(\n        \"http://localhost:5000/users/ForgotPassword\",\n        user\n      );\n      localStorage.setItem(\"auth-token\", loginRes.data.token);\n      history.push(\"/\");\n    } catch (err) {\n      if(err.response.data.msg) {\n        store.addNotification({\n          title: \"Error:\",\n          message: `${err.response.data.msg}`,\n          type: \"danger\",\n          insert: \"top\",\n          container: \"top-right\",\n          animationIn: [\"animated\", \"fadeIn\"],\n          animationOut: [\"animated\", \"fadeOut\"],\n          dismiss: {\n            duration: 2000,\n            onScreen: true\n          }\n        });\n      }\n    }\n    store.addNotification({\n      title: \"Success:\",\n      message: `Password reset link has been sent to you`,\n      type: \"success\",\n      insert: \"top\",\n      container: \"top-right\",\n      animationIn: [\"animated\", \"fadeIn\"],\n      animationOut: [\"animated\", \"fadeOut\"],\n      dismiss: {\n        duration: 2000,\n        onScreen: true\n      }\n    });\n  };\n  return (\n    <div className=\"page\">\n      <h2>Reset Password</h2>\n      <GeneralTextField\n          placeholder=\"Email\"\n          onChange ={(e) => setEmail(e.target.value)}\n          value = {email}\n        />\n        <div style={{marginTop: 15}}> \n          <GeneralButton \n              handleSubmit={submit}\n              fullWidth={true}\n              text=\"Send reset link\"\n          />  \n        </div>\n    </div>\n  );\n}","import React, { useState, useContext, useEffect } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { makeStyles } from '@material-ui/core/styles';\nimport UserContext from \"../context/UserContext\";\nimport Axios from \"axios\";\nimport { store } from 'react-notifications-component';\nimport GeneralButton from '../Input/GeneralButton';\nimport GeneralTextField from '../Input/GeneralTextField';\n\nexport default function ResetPassword(props) {\n  const [password, setPassword] = useState();\n  const [passwordCheck, setPasswordCheck] = useState();\n\n  const { setUserData } = useContext(UserContext);\n  const history = useHistory();\n\n  const useStyles = makeStyles((theme) => ({\n    textField: {\n      marginLeft: theme.spacing(1),\n      marginRight: theme.spacing(1),\n      marginBottom: theme.spacing(1),\n    },\n    root: {\n      width: '100%',\n      '& > * + *': {\n        marginTop: theme.spacing(2),\n      },\n    },\n  }));\n\n  const classes = useStyles();\n\n//   console.log(props);\n\n  const submit = async (e) => {\n    e.preventDefault();\n\n    try {\n      const data = {\n          newPass: password,\n          confirmNewPass: passwordCheck,\n          resetLink: props.match.params.token\n      };\n      await Axios.post(\"http://localhost:5000/users/ResetPassword\", data,);\n      const loginRes = await Axios.post(\"http://localhost:5000/users/ResetPassword\", {\n        data,\n      });\n      localStorage.setItem(\"auth-token\", loginRes.data.token);\n      alert('Your password has been reset, please login')\n      history.push(\"/login\");\n      store.addNotification({\n        title: \"Success:\",\n        message: `Password has been reset`,\n        type: \"success\",\n        insert: \"top\",\n        container: \"top-right\",\n        animationIn: [\"animated\", \"fadeIn\"],\n        animationOut: [\"animated\", \"fadeOut\"],\n        dismiss: {\n          duration: 2000,\n          onScreen: true\n        }\n      });\n    } catch (err) {\n      if(err.response.data.msg) {\n        store.addNotification({\n          title: \"Error:\",\n          message: `${err.response.data.msg}`,\n          type: \"danger\",\n          insert: \"top\",\n          container: \"top-right\",\n          animationIn: [\"animated\", \"fadeIn\"],\n          animationOut: [\"animated\", \"fadeOut\"],\n          dismiss: {\n            duration: 2000,\n            onScreen: true\n          }\n        });\n      }\n    }\n  };\n\n  return (\n    <div className=\"page\">\n      <h2>Please enter your new password</h2>\n        <GeneralTextField\n          placeholder=\"Password\"\n          onChange ={(e) => setPassword(e.target.value)}\n          type=\"password\"\n        />\n        <GeneralTextField\n          placeholder=\"Re-type password\"\n          onChange ={(e) => setPasswordCheck(e.target.value)}\n          type=\"password\"\n        />\n\n        <div style={{marginTop: 15}}>\n          <GeneralButton \n              handleSubmit={submit}\n              fullWidth={true}\n              text=\"Submit\"\n          />\n        </div>\n    </div>\n  );\n}","import React, {useState, useEffect, useContext} from 'react';\nimport clsx from 'clsx';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Drawer from '@material-ui/core/Drawer';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport List from '@material-ui/core/List';\n// import Typography from '@material-ui/core/Typography';\nimport Divider from '@material-ui/core/Divider';\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport HomeIcon from \"@material-ui/icons/Home\";\nimport PersonIcon from \"@material-ui/icons/Person\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport SettingsIcon from \"@material-ui/icons/Settings\";\nimport PhoneAndroidIcon from '@material-ui/icons/PhoneAndroid';\nimport PhoneAndroidTwoToneIcon from '@material-ui/icons/PhoneAndroidTwoTone';\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\n// import UpdateIcon from '@material-ui/icons/Update';\n// import InboxIcon from '@material-ui/icons/MoveToInbox';\n// import MailIcon from '@material-ui/icons/Mail';\nimport { MenuList, MenuItem } from '@material-ui/core';\nimport {\n  // eslint-disable-next-line no-unused-vars\n  BrowserRouter as Router,\n  Switch, Route, Link, Redirect\n} from \"react-router-dom\";\n\n// import galaxy from '../Images/galaxy.jpg';\n// import graybg from '../Images/graybg.jpg';\n\n//Routing\nimport Home from '../Pages/Home';\nimport Profile from '../Pages/Profile';\nimport Settings from '../Pages/Settings';\nimport AddNew from '../Pages/AddNew';\nimport ProductPage from '../Pages/ProductPage';\nimport CategoryPage from '../Pages/CategoryPage';\nimport UpdateProduct from '../Pages/UpdateProduct';\nimport Register from '../auth/Register';\nimport AuthOptions from \"../auth/AuthOptions\";\nimport Login from '../auth/Login';\nimport ForgotPassword from '../auth/ForgotPassword';\nimport ResetPassword from '../auth/ResetPassword';\nimport UserContext from \"../context/UserContext\";\n\n// import InfoIcon from '@material-ui/icons/Info';\n//for menu logo\nimport Trackit_logo from '../Images/Trackit_logo.png';\n\nimport '../style.css';\n\nconst drawerWidth = 240;\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: 'flex',\n  },\n  appBar: {\n    transition: theme.transitions.create(['margin', 'width'], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n  },\n  appBarShift: {\n    width: `calc(100% - ${drawerWidth}px)`,\n    marginLeft: drawerWidth,\n    transition: theme.transitions.create(['margin', 'width'], {\n      easing: theme.transitions.easing.easeOut,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n    // color: \"#2e84f8\"\n  },\n  hide: {\n    display: 'none',\n  },\n  drawer: {\n    width: drawerWidth,\n    flexShrink: 0,\n  },\n  drawerPaper: {\n    width: drawerWidth,\n    // backgroundImage: `url(${graybg})`\n    backgroundColor: \"#21202a\",\n    // borderColor: \"#2e84f8\",\n    // borderWidth: 2\n    boxShadow: \"0px 2px 4px -1px rgba(0,0,0,0.2), 0px 4px 5px 0px rgba(0,0,0,0.14), 0px 1px 10px 0px rgba(0,0,0,0.12)\"\n  },\n  drawerHeader: {\n    display: 'flex',\n    alignItems: 'center',\n    padding: theme.spacing(0, 1),\n    // necessary for content to be below app bar\n    ...theme.mixins.toolbar,\n    justifyContent: 'flex-end',\n  },\n  content: {\n    flexGrow: 1,\n    padding: theme.spacing(3),\n    transition: theme.transitions.create('margin', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n    marginLeft: -drawerWidth,\n  },\n  contentShift: {\n    transition: theme.transitions.create('margin', {\n      easing: theme.transitions.easing.easeOut,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n    marginLeft: 0,\n  },\n}));\n\nexport default function PersistentDrawerLeft(props) {\n  const classes = useStyles();\n  const theme = useTheme();\n  const [open, setOpen] = React.useState(false);\n  const [showIconButton, setShowIconButton] = React.useState(false);\n  const { userData } = useContext(UserContext);\n  const handleDrawerOpen = () => {\n    console.log(props)\n    if(props.user && (props.user.user !== undefined)) {\n      setOpen(true);\n    } else {\n      return <Redirect to='/login' />\n    }\n  };\n\n  const handleDrawerClose = () => {\n    setOpen(false);\n  };\n\n  useEffect(() => {\n    if(props.user && (props.user.user !== undefined)) {\n      setShowIconButton(true);\n    } else {\n      setShowIconButton(false);\n    }\n  }, [props.user])\n\n  useEffect(() => {\n\n  })\n\n  return (\n    <div className={classes.root}>\n      <CssBaseline />\n      <AppBar\n        position=\"fixed\"\n        className={clsx(classes.appBar, {\n          [classes.appBarShift]: open,\n        })}\n      >\n        <Toolbar id=\"header\">\n          {showIconButton\n            ? <IconButton\n              color=\"primary\"\n              aria-label=\"open drawer\"\n              onClick={handleDrawerOpen}\n              edge=\"start\"\n              className={clsx(classes.menuButton, open && classes.hide)}\n            >\n              <MenuIcon />\n            </IconButton>\n            : null }\n          <div id='title'>\n            <Link to=\"/\">\n              <img src={Trackit_logo}\n              alt=\"Trackit_logo\"\n              height='60'\n              style={{marginTop: 10}}/>\n            </Link>\n          </div>\n          <div id='header'>\n\n            <AuthOptions \n            closeDrawer={handleDrawerClose}/>\n          </div>\n          \n        </Toolbar>\n      </AppBar>\n\n      <Drawer\n        className={classes.drawer}\n        variant=\"persistent\"\n        anchor=\"left\"\n        open={open}\n        classes={{\n          paper: classes.drawerPaper,\n        }}\n      >\n        <div className={classes.drawerHeader}>\n          <IconButton onClick={handleDrawerClose}>\n            {theme.direction === 'ltr' ? <ChevronLeftIcon /> : <ChevronRightIcon />}\n          </IconButton>\n        </div>\n        <Divider />\n        <List>\n        <MenuList>\n            <MenuItem component={Link} to=\"/\">\n            <ListItemIcon><HomeIcon color=\"primary\"/></ListItemIcon>\n                Home\n            </MenuItem>\n            <MenuItem component={Link} to=\"/profile\">\n            <ListItemIcon><PersonIcon color=\"primary\"/></ListItemIcon>\n                Profile\n            </MenuItem>\n            <MenuItem component={Link} to=\"/products\">\n            <ListItemIcon><PhoneAndroidIcon color=\"primary\"/></ListItemIcon>\n                Products\n            </MenuItem>\n            <MenuItem component={Link} to=\"/categories\">\n            <ListItemIcon><PhoneAndroidTwoToneIcon color=\"primary\"/></ListItemIcon>\n                Categories\n            </MenuItem>\n            <MenuItem component={Link} to=\"/addnew\">\n            <ListItemIcon><AddIcon color=\"primary\"/></ListItemIcon>\n                Add Products\n            </MenuItem>\n            {/* <MenuItem component={Link} to=\"/updateProduct\">\n            <ListItemIcon><UpdateIcon /></ListItemIcon>\n                Update Product\n            </MenuItem> */}\n            <MenuItem component={Link} to=\"/settings\">\n            <ListItemIcon><SettingsIcon color=\"primary\"/></ListItemIcon>\n                Settings\n            </MenuItem>\n        </MenuList>\n\n        </List>\n      </Drawer>\n      <main\n        className={clsx(classes.content, {\n          [classes.contentShift]: open,\n        })}\n      >\n        <div className={classes.drawerHeader} />\n        <Switch>\n          <Route exact path=\"/\" component={Home}>\n          </Route>\n          <Route exact path=\"/Profile\" component={Profile}>\n          </Route>\n          <Route exact path=\"/Login\" component={Login}>\n          </Route>\n          <Route exact path=\"/Settings\" component={Settings}>\n          </Route>\n          <Route exact path=\"/Products\" component={ProductPage}>\n          </Route>\n          <Route exact path=\"/AddNew\" component={AddNew}>\n          </Route>\n          <Route exact path=\"/Categories\" component={CategoryPage}>\n          </Route>\n          <Route exact path=\"/UpdateProduct\" component={UpdateProduct}>\n          </Route>\n          <Route exact path=\"/Register\" component={Register}>\n          </Route>\n          <Route exact path=\"/ForgotPassword\" component={ForgotPassword}>\n          </Route>\n          <Route exact path=\"/ResetPassword\" component={ResetPassword}>\n          </Route>\n          <Route\n                  path=\"/ResetPassword/:token\"\n                  component={ResetPassword}\n                />\n        </Switch>\n        \n      </main>\n      \n    </div>\n  );\n}\n","import './index.css';\nimport React from 'react';\nimport Drawer from './Sidebar/Drawer'\nimport { useState, useEffect } from \"react\";\nimport { BrowserRouter, Switch, Route } from \"react-router-dom\";\nimport Axios from \"axios\";\n// import Header from \"./layout/Header\";\nimport Home from \"./Pages/Home\";\nimport Login from \"./auth/Login\";\nimport Register from \"./auth/Register\";\nimport UserContext from \"./context/UserContext\";\nimport {ThemeProvider, createMuiTheme, createPalette } from '@material-ui/core/styles';\n// import galaxy from \"./Images/galaxy.jpg\";\n// import graybg from \"./Images/graybg.jpg\";\n// import purplebg from \"./Images/purplebg.png\";\n\n//Notifications\nimport ReactNotification from 'react-notifications-component'\nimport 'react-notifications-component/dist/theme.css'\n\nimport \"./style.css\";\n\nconst theme = createMuiTheme({\n  palette: {\n    type: \"dark\",\n    primary: {\n      light: '#fff',\n      main: '#fff',\n      dark: '#fff'\n    },\n    secondary: {\n      light: '#ffffff',\n      main: '#ffffff',\n      dark: '#ffffff'\n    },\n    background: {\n      default: \"#1D1C24\"\n    }\n  }\n});\n\n\nfunction App(props) {\n  const [userData, setUserData] = useState({\n    token: undefined,\n    user: undefined,\n  });\n\n  useEffect(() => {\n    const checkLoggedIn = async () => {\n      let token = localStorage.getItem(\"auth-token\");\n      if (token === null) {\n        localStorage.setItem(\"auth-token\", \"\");\n        token = \"\";\n      }\n      const tokenRes = await Axios.post(\n        \"http://localhost:5000/users/tokenIsValid\",\n        null,\n        { headers: { \"x-auth-token\": token } }\n      );\n      if (tokenRes.data) {\n        const userRes = await Axios.get(\"http://localhost:5000/users/\", {\n          headers: { \"x-auth-token\": token },\n        });\n        setUserData({\n          token,\n          user: userRes.data,\n        });\n      }\n    };\n\n    checkLoggedIn();\n  }, []);\n\n\n  return (\n    <>\n    <ReactNotification />\n    {/* <div className=\"background\"> */}\n    <div>\n      <ThemeProvider theme={theme}>\n      <BrowserRouter>\n        <UserContext.Provider value={{ userData, setUserData }}>\n          <Drawer user={userData} />\n        </UserContext.Provider>\n      </BrowserRouter>\n      </ThemeProvider>\n      </div>\n    </>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport {BrowserRouter} from 'react-router-dom';\nimport {ApolloProvider} from '@apollo/react-hooks';\nimport { createHttpLink } from 'apollo-link-http';\nimport { InMemoryCache } from 'apollo-cache-inmemory';\nimport { ApolloClient } from 'apollo-client';\n\n// 2\nconst httpLink = createHttpLink({\n  uri: 'http://localhost:4000'\n})\n\n// 3\nconst client = new ApolloClient({\n  link: httpLink,\n  cache: new InMemoryCache()\n})\n\nReactDOM.render(\n  <ApolloProvider client ={client}>\n    <BrowserRouter>\n     <App />\n    </BrowserRouter>\n  </ApolloProvider>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}